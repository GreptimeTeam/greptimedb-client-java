// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: column.proto

package io.greptime.v1;

public final class Columns {
  private Columns() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code greptime.v1.ColumnDataType}
   */
  public enum ColumnDataType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>BOOLEAN = 0;</code>
     */
    BOOLEAN(0),
    /**
     * <code>INT8 = 1;</code>
     */
    INT8(1),
    /**
     * <code>INT16 = 2;</code>
     */
    INT16(2),
    /**
     * <code>INT32 = 3;</code>
     */
    INT32(3),
    /**
     * <code>INT64 = 4;</code>
     */
    INT64(4),
    /**
     * <code>UINT8 = 5;</code>
     */
    UINT8(5),
    /**
     * <code>UINT16 = 6;</code>
     */
    UINT16(6),
    /**
     * <code>UINT32 = 7;</code>
     */
    UINT32(7),
    /**
     * <code>UINT64 = 8;</code>
     */
    UINT64(8),
    /**
     * <code>FLOAT32 = 9;</code>
     */
    FLOAT32(9),
    /**
     * <code>FLOAT64 = 10;</code>
     */
    FLOAT64(10),
    /**
     * <code>BINARY = 11;</code>
     */
    BINARY(11),
    /**
     * <code>STRING = 12;</code>
     */
    STRING(12),
    /**
     * <code>DATE = 13;</code>
     */
    DATE(13),
    /**
     * <code>DATETIME = 14;</code>
     */
    DATETIME(14),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>BOOLEAN = 0;</code>
     */
    public static final int BOOLEAN_VALUE = 0;
    /**
     * <code>INT8 = 1;</code>
     */
    public static final int INT8_VALUE = 1;
    /**
     * <code>INT16 = 2;</code>
     */
    public static final int INT16_VALUE = 2;
    /**
     * <code>INT32 = 3;</code>
     */
    public static final int INT32_VALUE = 3;
    /**
     * <code>INT64 = 4;</code>
     */
    public static final int INT64_VALUE = 4;
    /**
     * <code>UINT8 = 5;</code>
     */
    public static final int UINT8_VALUE = 5;
    /**
     * <code>UINT16 = 6;</code>
     */
    public static final int UINT16_VALUE = 6;
    /**
     * <code>UINT32 = 7;</code>
     */
    public static final int UINT32_VALUE = 7;
    /**
     * <code>UINT64 = 8;</code>
     */
    public static final int UINT64_VALUE = 8;
    /**
     * <code>FLOAT32 = 9;</code>
     */
    public static final int FLOAT32_VALUE = 9;
    /**
     * <code>FLOAT64 = 10;</code>
     */
    public static final int FLOAT64_VALUE = 10;
    /**
     * <code>BINARY = 11;</code>
     */
    public static final int BINARY_VALUE = 11;
    /**
     * <code>STRING = 12;</code>
     */
    public static final int STRING_VALUE = 12;
    /**
     * <code>DATE = 13;</code>
     */
    public static final int DATE_VALUE = 13;
    /**
     * <code>DATETIME = 14;</code>
     */
    public static final int DATETIME_VALUE = 14;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ColumnDataType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ColumnDataType forNumber(int value) {
      switch (value) {
        case 0: return BOOLEAN;
        case 1: return INT8;
        case 2: return INT16;
        case 3: return INT32;
        case 4: return INT64;
        case 5: return UINT8;
        case 6: return UINT16;
        case 7: return UINT32;
        case 8: return UINT64;
        case 9: return FLOAT32;
        case 10: return FLOAT64;
        case 11: return BINARY;
        case 12: return STRING;
        case 13: return DATE;
        case 14: return DATETIME;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ColumnDataType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ColumnDataType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ColumnDataType>() {
            public ColumnDataType findValueByNumber(int number) {
              return ColumnDataType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return io.greptime.v1.Columns.getDescriptor().getEnumTypes().get(0);
    }

    private static final ColumnDataType[] VALUES = values();

    public static ColumnDataType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ColumnDataType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:greptime.v1.ColumnDataType)
  }

  public interface ColumnOrBuilder extends
      // @@protoc_insertion_point(interface_extends:greptime.v1.Column)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string column_name = 1;</code>
     * @return The columnName.
     */
    java.lang.String getColumnName();
    /**
     * <code>string column_name = 1;</code>
     * @return The bytes for columnName.
     */
    com.google.protobuf.ByteString
        getColumnNameBytes();

    /**
     * <code>.greptime.v1.Column.SemanticType semantic_type = 2;</code>
     * @return The enum numeric value on the wire for semanticType.
     */
    int getSemanticTypeValue();
    /**
     * <code>.greptime.v1.Column.SemanticType semantic_type = 2;</code>
     * @return The semanticType.
     */
    io.greptime.v1.Columns.Column.SemanticType getSemanticType();

    /**
     * <pre>
     * The array of non-null values in this column.
     * For example: suppose there is a column "foo" that contains some int32 values (1, 2, 3, 4, 5, null, 7, 8, 9, null);
     *   column:
     *     column_name: foo
     *     semantic_type: Tag
     *     values: 1, 2, 3, 4, 5, 7, 8, 9
     *     null_masks: 00100000 00000010
     * </pre>
     *
     * <code>.greptime.v1.Column.Values values = 3;</code>
     * @return Whether the values field is set.
     */
    boolean hasValues();
    /**
     * <pre>
     * The array of non-null values in this column.
     * For example: suppose there is a column "foo" that contains some int32 values (1, 2, 3, 4, 5, null, 7, 8, 9, null);
     *   column:
     *     column_name: foo
     *     semantic_type: Tag
     *     values: 1, 2, 3, 4, 5, 7, 8, 9
     *     null_masks: 00100000 00000010
     * </pre>
     *
     * <code>.greptime.v1.Column.Values values = 3;</code>
     * @return The values.
     */
    io.greptime.v1.Columns.Column.Values getValues();
    /**
     * <pre>
     * The array of non-null values in this column.
     * For example: suppose there is a column "foo" that contains some int32 values (1, 2, 3, 4, 5, null, 7, 8, 9, null);
     *   column:
     *     column_name: foo
     *     semantic_type: Tag
     *     values: 1, 2, 3, 4, 5, 7, 8, 9
     *     null_masks: 00100000 00000010
     * </pre>
     *
     * <code>.greptime.v1.Column.Values values = 3;</code>
     */
    io.greptime.v1.Columns.Column.ValuesOrBuilder getValuesOrBuilder();

    /**
     * <code>int32 value_index = 4;</code>
     * @return The valueIndex.
     */
    int getValueIndex();

    /**
     * <pre>
     * Mask maps the positions of null values.
     * If a bit in null_mask is 1, it indicates that the column value at that position is null.
     * </pre>
     *
     * <code>bytes null_mask = 5;</code>
     * @return The nullMask.
     */
    com.google.protobuf.ByteString getNullMask();
  }
  /**
   * Protobuf type {@code greptime.v1.Column}
   */
  public static final class Column extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:greptime.v1.Column)
      ColumnOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Column.newBuilder() to construct.
    private Column(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Column() {
      columnName_ = "";
      semanticType_ = 0;
      nullMask_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new Column();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Column(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              columnName_ = s;
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              semanticType_ = rawValue;
              break;
            }
            case 26: {
              io.greptime.v1.Columns.Column.Values.Builder subBuilder = null;
              if (values_ != null) {
                subBuilder = values_.toBuilder();
              }
              values_ = input.readMessage(io.greptime.v1.Columns.Column.Values.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(values_);
                values_ = subBuilder.buildPartial();
              }

              break;
            }
            case 32: {

              valueIndex_ = input.readInt32();
              break;
            }
            case 42: {

              nullMask_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.greptime.v1.Columns.internal_static_greptime_v1_Column_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.greptime.v1.Columns.internal_static_greptime_v1_Column_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.greptime.v1.Columns.Column.class, io.greptime.v1.Columns.Column.Builder.class);
    }

    /**
     * Protobuf enum {@code greptime.v1.Column.SemanticType}
     */
    public enum SemanticType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>TAG = 0;</code>
       */
      TAG(0),
      /**
       * <code>FIELD = 1;</code>
       */
      FIELD(1),
      /**
       * <code>TIMESTAMP = 2;</code>
       */
      TIMESTAMP(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>TAG = 0;</code>
       */
      public static final int TAG_VALUE = 0;
      /**
       * <code>FIELD = 1;</code>
       */
      public static final int FIELD_VALUE = 1;
      /**
       * <code>TIMESTAMP = 2;</code>
       */
      public static final int TIMESTAMP_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static SemanticType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static SemanticType forNumber(int value) {
        switch (value) {
          case 0: return TAG;
          case 1: return FIELD;
          case 2: return TIMESTAMP;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<SemanticType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          SemanticType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<SemanticType>() {
              public SemanticType findValueByNumber(int number) {
                return SemanticType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return io.greptime.v1.Columns.Column.getDescriptor().getEnumTypes().get(0);
      }

      private static final SemanticType[] VALUES = values();

      public static SemanticType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private SemanticType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:greptime.v1.Column.SemanticType)
    }

    public interface ValuesOrBuilder extends
        // @@protoc_insertion_point(interface_extends:greptime.v1.Column.Values)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>repeated int32 i8_values = 1;</code>
       * @return A list containing the i8Values.
       */
      java.util.List<java.lang.Integer> getI8ValuesList();
      /**
       * <code>repeated int32 i8_values = 1;</code>
       * @return The count of i8Values.
       */
      int getI8ValuesCount();
      /**
       * <code>repeated int32 i8_values = 1;</code>
       * @param index The index of the element to return.
       * @return The i8Values at the given index.
       */
      int getI8Values(int index);

      /**
       * <code>repeated int32 i16_values = 2;</code>
       * @return A list containing the i16Values.
       */
      java.util.List<java.lang.Integer> getI16ValuesList();
      /**
       * <code>repeated int32 i16_values = 2;</code>
       * @return The count of i16Values.
       */
      int getI16ValuesCount();
      /**
       * <code>repeated int32 i16_values = 2;</code>
       * @param index The index of the element to return.
       * @return The i16Values at the given index.
       */
      int getI16Values(int index);

      /**
       * <code>repeated int32 i32_values = 3;</code>
       * @return A list containing the i32Values.
       */
      java.util.List<java.lang.Integer> getI32ValuesList();
      /**
       * <code>repeated int32 i32_values = 3;</code>
       * @return The count of i32Values.
       */
      int getI32ValuesCount();
      /**
       * <code>repeated int32 i32_values = 3;</code>
       * @param index The index of the element to return.
       * @return The i32Values at the given index.
       */
      int getI32Values(int index);

      /**
       * <code>repeated int64 i64_values = 4;</code>
       * @return A list containing the i64Values.
       */
      java.util.List<java.lang.Long> getI64ValuesList();
      /**
       * <code>repeated int64 i64_values = 4;</code>
       * @return The count of i64Values.
       */
      int getI64ValuesCount();
      /**
       * <code>repeated int64 i64_values = 4;</code>
       * @param index The index of the element to return.
       * @return The i64Values at the given index.
       */
      long getI64Values(int index);

      /**
       * <code>repeated uint32 u8_values = 5;</code>
       * @return A list containing the u8Values.
       */
      java.util.List<java.lang.Integer> getU8ValuesList();
      /**
       * <code>repeated uint32 u8_values = 5;</code>
       * @return The count of u8Values.
       */
      int getU8ValuesCount();
      /**
       * <code>repeated uint32 u8_values = 5;</code>
       * @param index The index of the element to return.
       * @return The u8Values at the given index.
       */
      int getU8Values(int index);

      /**
       * <code>repeated uint32 u16_values = 6;</code>
       * @return A list containing the u16Values.
       */
      java.util.List<java.lang.Integer> getU16ValuesList();
      /**
       * <code>repeated uint32 u16_values = 6;</code>
       * @return The count of u16Values.
       */
      int getU16ValuesCount();
      /**
       * <code>repeated uint32 u16_values = 6;</code>
       * @param index The index of the element to return.
       * @return The u16Values at the given index.
       */
      int getU16Values(int index);

      /**
       * <code>repeated uint32 u32_values = 7;</code>
       * @return A list containing the u32Values.
       */
      java.util.List<java.lang.Integer> getU32ValuesList();
      /**
       * <code>repeated uint32 u32_values = 7;</code>
       * @return The count of u32Values.
       */
      int getU32ValuesCount();
      /**
       * <code>repeated uint32 u32_values = 7;</code>
       * @param index The index of the element to return.
       * @return The u32Values at the given index.
       */
      int getU32Values(int index);

      /**
       * <code>repeated uint64 u64_values = 8;</code>
       * @return A list containing the u64Values.
       */
      java.util.List<java.lang.Long> getU64ValuesList();
      /**
       * <code>repeated uint64 u64_values = 8;</code>
       * @return The count of u64Values.
       */
      int getU64ValuesCount();
      /**
       * <code>repeated uint64 u64_values = 8;</code>
       * @param index The index of the element to return.
       * @return The u64Values at the given index.
       */
      long getU64Values(int index);

      /**
       * <code>repeated float f32_values = 9;</code>
       * @return A list containing the f32Values.
       */
      java.util.List<java.lang.Float> getF32ValuesList();
      /**
       * <code>repeated float f32_values = 9;</code>
       * @return The count of f32Values.
       */
      int getF32ValuesCount();
      /**
       * <code>repeated float f32_values = 9;</code>
       * @param index The index of the element to return.
       * @return The f32Values at the given index.
       */
      float getF32Values(int index);

      /**
       * <code>repeated double f64_values = 10;</code>
       * @return A list containing the f64Values.
       */
      java.util.List<java.lang.Double> getF64ValuesList();
      /**
       * <code>repeated double f64_values = 10;</code>
       * @return The count of f64Values.
       */
      int getF64ValuesCount();
      /**
       * <code>repeated double f64_values = 10;</code>
       * @param index The index of the element to return.
       * @return The f64Values at the given index.
       */
      double getF64Values(int index);

      /**
       * <code>repeated bool bool_values = 11;</code>
       * @return A list containing the boolValues.
       */
      java.util.List<java.lang.Boolean> getBoolValuesList();
      /**
       * <code>repeated bool bool_values = 11;</code>
       * @return The count of boolValues.
       */
      int getBoolValuesCount();
      /**
       * <code>repeated bool bool_values = 11;</code>
       * @param index The index of the element to return.
       * @return The boolValues at the given index.
       */
      boolean getBoolValues(int index);

      /**
       * <code>repeated bytes binary_values = 12;</code>
       * @return A list containing the binaryValues.
       */
      java.util.List<com.google.protobuf.ByteString> getBinaryValuesList();
      /**
       * <code>repeated bytes binary_values = 12;</code>
       * @return The count of binaryValues.
       */
      int getBinaryValuesCount();
      /**
       * <code>repeated bytes binary_values = 12;</code>
       * @param index The index of the element to return.
       * @return The binaryValues at the given index.
       */
      com.google.protobuf.ByteString getBinaryValues(int index);

      /**
       * <code>repeated string string_values = 13;</code>
       * @return A list containing the stringValues.
       */
      java.util.List<java.lang.String>
          getStringValuesList();
      /**
       * <code>repeated string string_values = 13;</code>
       * @return The count of stringValues.
       */
      int getStringValuesCount();
      /**
       * <code>repeated string string_values = 13;</code>
       * @param index The index of the element to return.
       * @return The stringValues at the given index.
       */
      java.lang.String getStringValues(int index);
      /**
       * <code>repeated string string_values = 13;</code>
       * @param index The index of the value to return.
       * @return The bytes of the stringValues at the given index.
       */
      com.google.protobuf.ByteString
          getStringValuesBytes(int index);
    }
    /**
     * Protobuf type {@code greptime.v1.Column.Values}
     */
    public static final class Values extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:greptime.v1.Column.Values)
        ValuesOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Values.newBuilder() to construct.
      private Values(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Values() {
        i8Values_ = emptyIntList();
        i16Values_ = emptyIntList();
        i32Values_ = emptyIntList();
        i64Values_ = emptyLongList();
        u8Values_ = emptyIntList();
        u16Values_ = emptyIntList();
        u32Values_ = emptyIntList();
        u64Values_ = emptyLongList();
        f32Values_ = emptyFloatList();
        f64Values_ = emptyDoubleList();
        boolValues_ = emptyBooleanList();
        binaryValues_ = java.util.Collections.emptyList();
        stringValues_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Values();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Values(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                  i8Values_ = newIntList();
                  mutable_bitField0_ |= 0x00000001;
                }
                i8Values_.addInt(input.readInt32());
                break;
              }
              case 10: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                  i8Values_ = newIntList();
                  mutable_bitField0_ |= 0x00000001;
                }
                while (input.getBytesUntilLimit() > 0) {
                  i8Values_.addInt(input.readInt32());
                }
                input.popLimit(limit);
                break;
              }
              case 16: {
                if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                  i16Values_ = newIntList();
                  mutable_bitField0_ |= 0x00000002;
                }
                i16Values_.addInt(input.readInt32());
                break;
              }
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
                  i16Values_ = newIntList();
                  mutable_bitField0_ |= 0x00000002;
                }
                while (input.getBytesUntilLimit() > 0) {
                  i16Values_.addInt(input.readInt32());
                }
                input.popLimit(limit);
                break;
              }
              case 24: {
                if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                  i32Values_ = newIntList();
                  mutable_bitField0_ |= 0x00000004;
                }
                i32Values_.addInt(input.readInt32());
                break;
              }
              case 26: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000004) != 0) && input.getBytesUntilLimit() > 0) {
                  i32Values_ = newIntList();
                  mutable_bitField0_ |= 0x00000004;
                }
                while (input.getBytesUntilLimit() > 0) {
                  i32Values_.addInt(input.readInt32());
                }
                input.popLimit(limit);
                break;
              }
              case 32: {
                if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                  i64Values_ = newLongList();
                  mutable_bitField0_ |= 0x00000008;
                }
                i64Values_.addLong(input.readInt64());
                break;
              }
              case 34: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000008) != 0) && input.getBytesUntilLimit() > 0) {
                  i64Values_ = newLongList();
                  mutable_bitField0_ |= 0x00000008;
                }
                while (input.getBytesUntilLimit() > 0) {
                  i64Values_.addLong(input.readInt64());
                }
                input.popLimit(limit);
                break;
              }
              case 40: {
                if (!((mutable_bitField0_ & 0x00000010) != 0)) {
                  u8Values_ = newIntList();
                  mutable_bitField0_ |= 0x00000010;
                }
                u8Values_.addInt(input.readUInt32());
                break;
              }
              case 42: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000010) != 0) && input.getBytesUntilLimit() > 0) {
                  u8Values_ = newIntList();
                  mutable_bitField0_ |= 0x00000010;
                }
                while (input.getBytesUntilLimit() > 0) {
                  u8Values_.addInt(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              }
              case 48: {
                if (!((mutable_bitField0_ & 0x00000020) != 0)) {
                  u16Values_ = newIntList();
                  mutable_bitField0_ |= 0x00000020;
                }
                u16Values_.addInt(input.readUInt32());
                break;
              }
              case 50: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000020) != 0) && input.getBytesUntilLimit() > 0) {
                  u16Values_ = newIntList();
                  mutable_bitField0_ |= 0x00000020;
                }
                while (input.getBytesUntilLimit() > 0) {
                  u16Values_.addInt(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              }
              case 56: {
                if (!((mutable_bitField0_ & 0x00000040) != 0)) {
                  u32Values_ = newIntList();
                  mutable_bitField0_ |= 0x00000040;
                }
                u32Values_.addInt(input.readUInt32());
                break;
              }
              case 58: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000040) != 0) && input.getBytesUntilLimit() > 0) {
                  u32Values_ = newIntList();
                  mutable_bitField0_ |= 0x00000040;
                }
                while (input.getBytesUntilLimit() > 0) {
                  u32Values_.addInt(input.readUInt32());
                }
                input.popLimit(limit);
                break;
              }
              case 64: {
                if (!((mutable_bitField0_ & 0x00000080) != 0)) {
                  u64Values_ = newLongList();
                  mutable_bitField0_ |= 0x00000080;
                }
                u64Values_.addLong(input.readUInt64());
                break;
              }
              case 66: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000080) != 0) && input.getBytesUntilLimit() > 0) {
                  u64Values_ = newLongList();
                  mutable_bitField0_ |= 0x00000080;
                }
                while (input.getBytesUntilLimit() > 0) {
                  u64Values_.addLong(input.readUInt64());
                }
                input.popLimit(limit);
                break;
              }
              case 77: {
                if (!((mutable_bitField0_ & 0x00000100) != 0)) {
                  f32Values_ = newFloatList();
                  mutable_bitField0_ |= 0x00000100;
                }
                f32Values_.addFloat(input.readFloat());
                break;
              }
              case 74: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000100) != 0) && input.getBytesUntilLimit() > 0) {
                  f32Values_ = newFloatList();
                  mutable_bitField0_ |= 0x00000100;
                }
                while (input.getBytesUntilLimit() > 0) {
                  f32Values_.addFloat(input.readFloat());
                }
                input.popLimit(limit);
                break;
              }
              case 81: {
                if (!((mutable_bitField0_ & 0x00000200) != 0)) {
                  f64Values_ = newDoubleList();
                  mutable_bitField0_ |= 0x00000200;
                }
                f64Values_.addDouble(input.readDouble());
                break;
              }
              case 82: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000200) != 0) && input.getBytesUntilLimit() > 0) {
                  f64Values_ = newDoubleList();
                  mutable_bitField0_ |= 0x00000200;
                }
                while (input.getBytesUntilLimit() > 0) {
                  f64Values_.addDouble(input.readDouble());
                }
                input.popLimit(limit);
                break;
              }
              case 88: {
                if (!((mutable_bitField0_ & 0x00000400) != 0)) {
                  boolValues_ = newBooleanList();
                  mutable_bitField0_ |= 0x00000400;
                }
                boolValues_.addBoolean(input.readBool());
                break;
              }
              case 90: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000400) != 0) && input.getBytesUntilLimit() > 0) {
                  boolValues_ = newBooleanList();
                  mutable_bitField0_ |= 0x00000400;
                }
                while (input.getBytesUntilLimit() > 0) {
                  boolValues_.addBoolean(input.readBool());
                }
                input.popLimit(limit);
                break;
              }
              case 98: {
                if (!((mutable_bitField0_ & 0x00000800) != 0)) {
                  binaryValues_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                  mutable_bitField0_ |= 0x00000800;
                }
                binaryValues_.add(input.readBytes());
                break;
              }
              case 106: {
                java.lang.String s = input.readStringRequireUtf8();
                if (!((mutable_bitField0_ & 0x00001000) != 0)) {
                  stringValues_ = new com.google.protobuf.LazyStringArrayList();
                  mutable_bitField0_ |= 0x00001000;
                }
                stringValues_.add(s);
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) != 0)) {
            i8Values_.makeImmutable(); // C
          }
          if (((mutable_bitField0_ & 0x00000002) != 0)) {
            i16Values_.makeImmutable(); // C
          }
          if (((mutable_bitField0_ & 0x00000004) != 0)) {
            i32Values_.makeImmutable(); // C
          }
          if (((mutable_bitField0_ & 0x00000008) != 0)) {
            i64Values_.makeImmutable(); // C
          }
          if (((mutable_bitField0_ & 0x00000010) != 0)) {
            u8Values_.makeImmutable(); // C
          }
          if (((mutable_bitField0_ & 0x00000020) != 0)) {
            u16Values_.makeImmutable(); // C
          }
          if (((mutable_bitField0_ & 0x00000040) != 0)) {
            u32Values_.makeImmutable(); // C
          }
          if (((mutable_bitField0_ & 0x00000080) != 0)) {
            u64Values_.makeImmutable(); // C
          }
          if (((mutable_bitField0_ & 0x00000100) != 0)) {
            f32Values_.makeImmutable(); // C
          }
          if (((mutable_bitField0_ & 0x00000200) != 0)) {
            f64Values_.makeImmutable(); // C
          }
          if (((mutable_bitField0_ & 0x00000400) != 0)) {
            boolValues_.makeImmutable(); // C
          }
          if (((mutable_bitField0_ & 0x00000800) != 0)) {
            binaryValues_ = java.util.Collections.unmodifiableList(binaryValues_); // C
          }
          if (((mutable_bitField0_ & 0x00001000) != 0)) {
            stringValues_ = stringValues_.getUnmodifiableView();
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.greptime.v1.Columns.internal_static_greptime_v1_Column_Values_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.greptime.v1.Columns.internal_static_greptime_v1_Column_Values_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.greptime.v1.Columns.Column.Values.class, io.greptime.v1.Columns.Column.Values.Builder.class);
      }

      public static final int I8_VALUES_FIELD_NUMBER = 1;
      private com.google.protobuf.Internal.IntList i8Values_;
      /**
       * <code>repeated int32 i8_values = 1;</code>
       * @return A list containing the i8Values.
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getI8ValuesList() {
        return i8Values_;
      }
      /**
       * <code>repeated int32 i8_values = 1;</code>
       * @return The count of i8Values.
       */
      public int getI8ValuesCount() {
        return i8Values_.size();
      }
      /**
       * <code>repeated int32 i8_values = 1;</code>
       * @param index The index of the element to return.
       * @return The i8Values at the given index.
       */
      public int getI8Values(int index) {
        return i8Values_.getInt(index);
      }
      private int i8ValuesMemoizedSerializedSize = -1;

      public static final int I16_VALUES_FIELD_NUMBER = 2;
      private com.google.protobuf.Internal.IntList i16Values_;
      /**
       * <code>repeated int32 i16_values = 2;</code>
       * @return A list containing the i16Values.
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getI16ValuesList() {
        return i16Values_;
      }
      /**
       * <code>repeated int32 i16_values = 2;</code>
       * @return The count of i16Values.
       */
      public int getI16ValuesCount() {
        return i16Values_.size();
      }
      /**
       * <code>repeated int32 i16_values = 2;</code>
       * @param index The index of the element to return.
       * @return The i16Values at the given index.
       */
      public int getI16Values(int index) {
        return i16Values_.getInt(index);
      }
      private int i16ValuesMemoizedSerializedSize = -1;

      public static final int I32_VALUES_FIELD_NUMBER = 3;
      private com.google.protobuf.Internal.IntList i32Values_;
      /**
       * <code>repeated int32 i32_values = 3;</code>
       * @return A list containing the i32Values.
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getI32ValuesList() {
        return i32Values_;
      }
      /**
       * <code>repeated int32 i32_values = 3;</code>
       * @return The count of i32Values.
       */
      public int getI32ValuesCount() {
        return i32Values_.size();
      }
      /**
       * <code>repeated int32 i32_values = 3;</code>
       * @param index The index of the element to return.
       * @return The i32Values at the given index.
       */
      public int getI32Values(int index) {
        return i32Values_.getInt(index);
      }
      private int i32ValuesMemoizedSerializedSize = -1;

      public static final int I64_VALUES_FIELD_NUMBER = 4;
      private com.google.protobuf.Internal.LongList i64Values_;
      /**
       * <code>repeated int64 i64_values = 4;</code>
       * @return A list containing the i64Values.
       */
      @java.lang.Override
      public java.util.List<java.lang.Long>
          getI64ValuesList() {
        return i64Values_;
      }
      /**
       * <code>repeated int64 i64_values = 4;</code>
       * @return The count of i64Values.
       */
      public int getI64ValuesCount() {
        return i64Values_.size();
      }
      /**
       * <code>repeated int64 i64_values = 4;</code>
       * @param index The index of the element to return.
       * @return The i64Values at the given index.
       */
      public long getI64Values(int index) {
        return i64Values_.getLong(index);
      }
      private int i64ValuesMemoizedSerializedSize = -1;

      public static final int U8_VALUES_FIELD_NUMBER = 5;
      private com.google.protobuf.Internal.IntList u8Values_;
      /**
       * <code>repeated uint32 u8_values = 5;</code>
       * @return A list containing the u8Values.
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getU8ValuesList() {
        return u8Values_;
      }
      /**
       * <code>repeated uint32 u8_values = 5;</code>
       * @return The count of u8Values.
       */
      public int getU8ValuesCount() {
        return u8Values_.size();
      }
      /**
       * <code>repeated uint32 u8_values = 5;</code>
       * @param index The index of the element to return.
       * @return The u8Values at the given index.
       */
      public int getU8Values(int index) {
        return u8Values_.getInt(index);
      }
      private int u8ValuesMemoizedSerializedSize = -1;

      public static final int U16_VALUES_FIELD_NUMBER = 6;
      private com.google.protobuf.Internal.IntList u16Values_;
      /**
       * <code>repeated uint32 u16_values = 6;</code>
       * @return A list containing the u16Values.
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getU16ValuesList() {
        return u16Values_;
      }
      /**
       * <code>repeated uint32 u16_values = 6;</code>
       * @return The count of u16Values.
       */
      public int getU16ValuesCount() {
        return u16Values_.size();
      }
      /**
       * <code>repeated uint32 u16_values = 6;</code>
       * @param index The index of the element to return.
       * @return The u16Values at the given index.
       */
      public int getU16Values(int index) {
        return u16Values_.getInt(index);
      }
      private int u16ValuesMemoizedSerializedSize = -1;

      public static final int U32_VALUES_FIELD_NUMBER = 7;
      private com.google.protobuf.Internal.IntList u32Values_;
      /**
       * <code>repeated uint32 u32_values = 7;</code>
       * @return A list containing the u32Values.
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
          getU32ValuesList() {
        return u32Values_;
      }
      /**
       * <code>repeated uint32 u32_values = 7;</code>
       * @return The count of u32Values.
       */
      public int getU32ValuesCount() {
        return u32Values_.size();
      }
      /**
       * <code>repeated uint32 u32_values = 7;</code>
       * @param index The index of the element to return.
       * @return The u32Values at the given index.
       */
      public int getU32Values(int index) {
        return u32Values_.getInt(index);
      }
      private int u32ValuesMemoizedSerializedSize = -1;

      public static final int U64_VALUES_FIELD_NUMBER = 8;
      private com.google.protobuf.Internal.LongList u64Values_;
      /**
       * <code>repeated uint64 u64_values = 8;</code>
       * @return A list containing the u64Values.
       */
      @java.lang.Override
      public java.util.List<java.lang.Long>
          getU64ValuesList() {
        return u64Values_;
      }
      /**
       * <code>repeated uint64 u64_values = 8;</code>
       * @return The count of u64Values.
       */
      public int getU64ValuesCount() {
        return u64Values_.size();
      }
      /**
       * <code>repeated uint64 u64_values = 8;</code>
       * @param index The index of the element to return.
       * @return The u64Values at the given index.
       */
      public long getU64Values(int index) {
        return u64Values_.getLong(index);
      }
      private int u64ValuesMemoizedSerializedSize = -1;

      public static final int F32_VALUES_FIELD_NUMBER = 9;
      private com.google.protobuf.Internal.FloatList f32Values_;
      /**
       * <code>repeated float f32_values = 9;</code>
       * @return A list containing the f32Values.
       */
      @java.lang.Override
      public java.util.List<java.lang.Float>
          getF32ValuesList() {
        return f32Values_;
      }
      /**
       * <code>repeated float f32_values = 9;</code>
       * @return The count of f32Values.
       */
      public int getF32ValuesCount() {
        return f32Values_.size();
      }
      /**
       * <code>repeated float f32_values = 9;</code>
       * @param index The index of the element to return.
       * @return The f32Values at the given index.
       */
      public float getF32Values(int index) {
        return f32Values_.getFloat(index);
      }
      private int f32ValuesMemoizedSerializedSize = -1;

      public static final int F64_VALUES_FIELD_NUMBER = 10;
      private com.google.protobuf.Internal.DoubleList f64Values_;
      /**
       * <code>repeated double f64_values = 10;</code>
       * @return A list containing the f64Values.
       */
      @java.lang.Override
      public java.util.List<java.lang.Double>
          getF64ValuesList() {
        return f64Values_;
      }
      /**
       * <code>repeated double f64_values = 10;</code>
       * @return The count of f64Values.
       */
      public int getF64ValuesCount() {
        return f64Values_.size();
      }
      /**
       * <code>repeated double f64_values = 10;</code>
       * @param index The index of the element to return.
       * @return The f64Values at the given index.
       */
      public double getF64Values(int index) {
        return f64Values_.getDouble(index);
      }
      private int f64ValuesMemoizedSerializedSize = -1;

      public static final int BOOL_VALUES_FIELD_NUMBER = 11;
      private com.google.protobuf.Internal.BooleanList boolValues_;
      /**
       * <code>repeated bool bool_values = 11;</code>
       * @return A list containing the boolValues.
       */
      @java.lang.Override
      public java.util.List<java.lang.Boolean>
          getBoolValuesList() {
        return boolValues_;
      }
      /**
       * <code>repeated bool bool_values = 11;</code>
       * @return The count of boolValues.
       */
      public int getBoolValuesCount() {
        return boolValues_.size();
      }
      /**
       * <code>repeated bool bool_values = 11;</code>
       * @param index The index of the element to return.
       * @return The boolValues at the given index.
       */
      public boolean getBoolValues(int index) {
        return boolValues_.getBoolean(index);
      }
      private int boolValuesMemoizedSerializedSize = -1;

      public static final int BINARY_VALUES_FIELD_NUMBER = 12;
      private java.util.List<com.google.protobuf.ByteString> binaryValues_;
      /**
       * <code>repeated bytes binary_values = 12;</code>
       * @return A list containing the binaryValues.
       */
      @java.lang.Override
      public java.util.List<com.google.protobuf.ByteString>
          getBinaryValuesList() {
        return binaryValues_;
      }
      /**
       * <code>repeated bytes binary_values = 12;</code>
       * @return The count of binaryValues.
       */
      public int getBinaryValuesCount() {
        return binaryValues_.size();
      }
      /**
       * <code>repeated bytes binary_values = 12;</code>
       * @param index The index of the element to return.
       * @return The binaryValues at the given index.
       */
      public com.google.protobuf.ByteString getBinaryValues(int index) {
        return binaryValues_.get(index);
      }

      public static final int STRING_VALUES_FIELD_NUMBER = 13;
      private com.google.protobuf.LazyStringList stringValues_;
      /**
       * <code>repeated string string_values = 13;</code>
       * @return A list containing the stringValues.
       */
      public com.google.protobuf.ProtocolStringList
          getStringValuesList() {
        return stringValues_;
      }
      /**
       * <code>repeated string string_values = 13;</code>
       * @return The count of stringValues.
       */
      public int getStringValuesCount() {
        return stringValues_.size();
      }
      /**
       * <code>repeated string string_values = 13;</code>
       * @param index The index of the element to return.
       * @return The stringValues at the given index.
       */
      public java.lang.String getStringValues(int index) {
        return stringValues_.get(index);
      }
      /**
       * <code>repeated string string_values = 13;</code>
       * @param index The index of the value to return.
       * @return The bytes of the stringValues at the given index.
       */
      public com.google.protobuf.ByteString
          getStringValuesBytes(int index) {
        return stringValues_.getByteString(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (getI8ValuesList().size() > 0) {
          output.writeUInt32NoTag(10);
          output.writeUInt32NoTag(i8ValuesMemoizedSerializedSize);
        }
        for (int i = 0; i < i8Values_.size(); i++) {
          output.writeInt32NoTag(i8Values_.getInt(i));
        }
        if (getI16ValuesList().size() > 0) {
          output.writeUInt32NoTag(18);
          output.writeUInt32NoTag(i16ValuesMemoizedSerializedSize);
        }
        for (int i = 0; i < i16Values_.size(); i++) {
          output.writeInt32NoTag(i16Values_.getInt(i));
        }
        if (getI32ValuesList().size() > 0) {
          output.writeUInt32NoTag(26);
          output.writeUInt32NoTag(i32ValuesMemoizedSerializedSize);
        }
        for (int i = 0; i < i32Values_.size(); i++) {
          output.writeInt32NoTag(i32Values_.getInt(i));
        }
        if (getI64ValuesList().size() > 0) {
          output.writeUInt32NoTag(34);
          output.writeUInt32NoTag(i64ValuesMemoizedSerializedSize);
        }
        for (int i = 0; i < i64Values_.size(); i++) {
          output.writeInt64NoTag(i64Values_.getLong(i));
        }
        if (getU8ValuesList().size() > 0) {
          output.writeUInt32NoTag(42);
          output.writeUInt32NoTag(u8ValuesMemoizedSerializedSize);
        }
        for (int i = 0; i < u8Values_.size(); i++) {
          output.writeUInt32NoTag(u8Values_.getInt(i));
        }
        if (getU16ValuesList().size() > 0) {
          output.writeUInt32NoTag(50);
          output.writeUInt32NoTag(u16ValuesMemoizedSerializedSize);
        }
        for (int i = 0; i < u16Values_.size(); i++) {
          output.writeUInt32NoTag(u16Values_.getInt(i));
        }
        if (getU32ValuesList().size() > 0) {
          output.writeUInt32NoTag(58);
          output.writeUInt32NoTag(u32ValuesMemoizedSerializedSize);
        }
        for (int i = 0; i < u32Values_.size(); i++) {
          output.writeUInt32NoTag(u32Values_.getInt(i));
        }
        if (getU64ValuesList().size() > 0) {
          output.writeUInt32NoTag(66);
          output.writeUInt32NoTag(u64ValuesMemoizedSerializedSize);
        }
        for (int i = 0; i < u64Values_.size(); i++) {
          output.writeUInt64NoTag(u64Values_.getLong(i));
        }
        if (getF32ValuesList().size() > 0) {
          output.writeUInt32NoTag(74);
          output.writeUInt32NoTag(f32ValuesMemoizedSerializedSize);
        }
        for (int i = 0; i < f32Values_.size(); i++) {
          output.writeFloatNoTag(f32Values_.getFloat(i));
        }
        if (getF64ValuesList().size() > 0) {
          output.writeUInt32NoTag(82);
          output.writeUInt32NoTag(f64ValuesMemoizedSerializedSize);
        }
        for (int i = 0; i < f64Values_.size(); i++) {
          output.writeDoubleNoTag(f64Values_.getDouble(i));
        }
        if (getBoolValuesList().size() > 0) {
          output.writeUInt32NoTag(90);
          output.writeUInt32NoTag(boolValuesMemoizedSerializedSize);
        }
        for (int i = 0; i < boolValues_.size(); i++) {
          output.writeBoolNoTag(boolValues_.getBoolean(i));
        }
        for (int i = 0; i < binaryValues_.size(); i++) {
          output.writeBytes(12, binaryValues_.get(i));
        }
        for (int i = 0; i < stringValues_.size(); i++) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 13, stringValues_.getRaw(i));
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        {
          int dataSize = 0;
          for (int i = 0; i < i8Values_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(i8Values_.getInt(i));
          }
          size += dataSize;
          if (!getI8ValuesList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          i8ValuesMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          for (int i = 0; i < i16Values_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(i16Values_.getInt(i));
          }
          size += dataSize;
          if (!getI16ValuesList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          i16ValuesMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          for (int i = 0; i < i32Values_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(i32Values_.getInt(i));
          }
          size += dataSize;
          if (!getI32ValuesList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          i32ValuesMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          for (int i = 0; i < i64Values_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeInt64SizeNoTag(i64Values_.getLong(i));
          }
          size += dataSize;
          if (!getI64ValuesList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          i64ValuesMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          for (int i = 0; i < u8Values_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(u8Values_.getInt(i));
          }
          size += dataSize;
          if (!getU8ValuesList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          u8ValuesMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          for (int i = 0; i < u16Values_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(u16Values_.getInt(i));
          }
          size += dataSize;
          if (!getU16ValuesList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          u16ValuesMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          for (int i = 0; i < u32Values_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(u32Values_.getInt(i));
          }
          size += dataSize;
          if (!getU32ValuesList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          u32ValuesMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          for (int i = 0; i < u64Values_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeUInt64SizeNoTag(u64Values_.getLong(i));
          }
          size += dataSize;
          if (!getU64ValuesList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          u64ValuesMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          dataSize = 4 * getF32ValuesList().size();
          size += dataSize;
          if (!getF32ValuesList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          f32ValuesMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          dataSize = 8 * getF64ValuesList().size();
          size += dataSize;
          if (!getF64ValuesList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          f64ValuesMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          dataSize = 1 * getBoolValuesList().size();
          size += dataSize;
          if (!getBoolValuesList().isEmpty()) {
            size += 1;
            size += com.google.protobuf.CodedOutputStream
                .computeInt32SizeNoTag(dataSize);
          }
          boolValuesMemoizedSerializedSize = dataSize;
        }
        {
          int dataSize = 0;
          for (int i = 0; i < binaryValues_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeBytesSizeNoTag(binaryValues_.get(i));
          }
          size += dataSize;
          size += 1 * getBinaryValuesList().size();
        }
        {
          int dataSize = 0;
          for (int i = 0; i < stringValues_.size(); i++) {
            dataSize += computeStringSizeNoTag(stringValues_.getRaw(i));
          }
          size += dataSize;
          size += 1 * getStringValuesList().size();
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof io.greptime.v1.Columns.Column.Values)) {
          return super.equals(obj);
        }
        io.greptime.v1.Columns.Column.Values other = (io.greptime.v1.Columns.Column.Values) obj;

        if (!getI8ValuesList()
            .equals(other.getI8ValuesList())) return false;
        if (!getI16ValuesList()
            .equals(other.getI16ValuesList())) return false;
        if (!getI32ValuesList()
            .equals(other.getI32ValuesList())) return false;
        if (!getI64ValuesList()
            .equals(other.getI64ValuesList())) return false;
        if (!getU8ValuesList()
            .equals(other.getU8ValuesList())) return false;
        if (!getU16ValuesList()
            .equals(other.getU16ValuesList())) return false;
        if (!getU32ValuesList()
            .equals(other.getU32ValuesList())) return false;
        if (!getU64ValuesList()
            .equals(other.getU64ValuesList())) return false;
        if (!getF32ValuesList()
            .equals(other.getF32ValuesList())) return false;
        if (!getF64ValuesList()
            .equals(other.getF64ValuesList())) return false;
        if (!getBoolValuesList()
            .equals(other.getBoolValuesList())) return false;
        if (!getBinaryValuesList()
            .equals(other.getBinaryValuesList())) return false;
        if (!getStringValuesList()
            .equals(other.getStringValuesList())) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (getI8ValuesCount() > 0) {
          hash = (37 * hash) + I8_VALUES_FIELD_NUMBER;
          hash = (53 * hash) + getI8ValuesList().hashCode();
        }
        if (getI16ValuesCount() > 0) {
          hash = (37 * hash) + I16_VALUES_FIELD_NUMBER;
          hash = (53 * hash) + getI16ValuesList().hashCode();
        }
        if (getI32ValuesCount() > 0) {
          hash = (37 * hash) + I32_VALUES_FIELD_NUMBER;
          hash = (53 * hash) + getI32ValuesList().hashCode();
        }
        if (getI64ValuesCount() > 0) {
          hash = (37 * hash) + I64_VALUES_FIELD_NUMBER;
          hash = (53 * hash) + getI64ValuesList().hashCode();
        }
        if (getU8ValuesCount() > 0) {
          hash = (37 * hash) + U8_VALUES_FIELD_NUMBER;
          hash = (53 * hash) + getU8ValuesList().hashCode();
        }
        if (getU16ValuesCount() > 0) {
          hash = (37 * hash) + U16_VALUES_FIELD_NUMBER;
          hash = (53 * hash) + getU16ValuesList().hashCode();
        }
        if (getU32ValuesCount() > 0) {
          hash = (37 * hash) + U32_VALUES_FIELD_NUMBER;
          hash = (53 * hash) + getU32ValuesList().hashCode();
        }
        if (getU64ValuesCount() > 0) {
          hash = (37 * hash) + U64_VALUES_FIELD_NUMBER;
          hash = (53 * hash) + getU64ValuesList().hashCode();
        }
        if (getF32ValuesCount() > 0) {
          hash = (37 * hash) + F32_VALUES_FIELD_NUMBER;
          hash = (53 * hash) + getF32ValuesList().hashCode();
        }
        if (getF64ValuesCount() > 0) {
          hash = (37 * hash) + F64_VALUES_FIELD_NUMBER;
          hash = (53 * hash) + getF64ValuesList().hashCode();
        }
        if (getBoolValuesCount() > 0) {
          hash = (37 * hash) + BOOL_VALUES_FIELD_NUMBER;
          hash = (53 * hash) + getBoolValuesList().hashCode();
        }
        if (getBinaryValuesCount() > 0) {
          hash = (37 * hash) + BINARY_VALUES_FIELD_NUMBER;
          hash = (53 * hash) + getBinaryValuesList().hashCode();
        }
        if (getStringValuesCount() > 0) {
          hash = (37 * hash) + STRING_VALUES_FIELD_NUMBER;
          hash = (53 * hash) + getStringValuesList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static io.greptime.v1.Columns.Column.Values parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.greptime.v1.Columns.Column.Values parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.greptime.v1.Columns.Column.Values parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.greptime.v1.Columns.Column.Values parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.greptime.v1.Columns.Column.Values parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static io.greptime.v1.Columns.Column.Values parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static io.greptime.v1.Columns.Column.Values parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.greptime.v1.Columns.Column.Values parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.greptime.v1.Columns.Column.Values parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static io.greptime.v1.Columns.Column.Values parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static io.greptime.v1.Columns.Column.Values parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static io.greptime.v1.Columns.Column.Values parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(io.greptime.v1.Columns.Column.Values prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code greptime.v1.Column.Values}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:greptime.v1.Column.Values)
          io.greptime.v1.Columns.Column.ValuesOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return io.greptime.v1.Columns.internal_static_greptime_v1_Column_Values_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return io.greptime.v1.Columns.internal_static_greptime_v1_Column_Values_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  io.greptime.v1.Columns.Column.Values.class, io.greptime.v1.Columns.Column.Values.Builder.class);
        }

        // Construct using io.greptime.v1.Columns.Column.Values.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          i8Values_ = emptyIntList();
          bitField0_ = (bitField0_ & ~0x00000001);
          i16Values_ = emptyIntList();
          bitField0_ = (bitField0_ & ~0x00000002);
          i32Values_ = emptyIntList();
          bitField0_ = (bitField0_ & ~0x00000004);
          i64Values_ = emptyLongList();
          bitField0_ = (bitField0_ & ~0x00000008);
          u8Values_ = emptyIntList();
          bitField0_ = (bitField0_ & ~0x00000010);
          u16Values_ = emptyIntList();
          bitField0_ = (bitField0_ & ~0x00000020);
          u32Values_ = emptyIntList();
          bitField0_ = (bitField0_ & ~0x00000040);
          u64Values_ = emptyLongList();
          bitField0_ = (bitField0_ & ~0x00000080);
          f32Values_ = emptyFloatList();
          bitField0_ = (bitField0_ & ~0x00000100);
          f64Values_ = emptyDoubleList();
          bitField0_ = (bitField0_ & ~0x00000200);
          boolValues_ = emptyBooleanList();
          bitField0_ = (bitField0_ & ~0x00000400);
          binaryValues_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
          stringValues_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00001000);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return io.greptime.v1.Columns.internal_static_greptime_v1_Column_Values_descriptor;
        }

        @java.lang.Override
        public io.greptime.v1.Columns.Column.Values getDefaultInstanceForType() {
          return io.greptime.v1.Columns.Column.Values.getDefaultInstance();
        }

        @java.lang.Override
        public io.greptime.v1.Columns.Column.Values build() {
          io.greptime.v1.Columns.Column.Values result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public io.greptime.v1.Columns.Column.Values buildPartial() {
          io.greptime.v1.Columns.Column.Values result = new io.greptime.v1.Columns.Column.Values(this);
          int from_bitField0_ = bitField0_;
          if (((bitField0_ & 0x00000001) != 0)) {
            i8Values_.makeImmutable();
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.i8Values_ = i8Values_;
          if (((bitField0_ & 0x00000002) != 0)) {
            i16Values_.makeImmutable();
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.i16Values_ = i16Values_;
          if (((bitField0_ & 0x00000004) != 0)) {
            i32Values_.makeImmutable();
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.i32Values_ = i32Values_;
          if (((bitField0_ & 0x00000008) != 0)) {
            i64Values_.makeImmutable();
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.i64Values_ = i64Values_;
          if (((bitField0_ & 0x00000010) != 0)) {
            u8Values_.makeImmutable();
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.u8Values_ = u8Values_;
          if (((bitField0_ & 0x00000020) != 0)) {
            u16Values_.makeImmutable();
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.u16Values_ = u16Values_;
          if (((bitField0_ & 0x00000040) != 0)) {
            u32Values_.makeImmutable();
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.u32Values_ = u32Values_;
          if (((bitField0_ & 0x00000080) != 0)) {
            u64Values_.makeImmutable();
            bitField0_ = (bitField0_ & ~0x00000080);
          }
          result.u64Values_ = u64Values_;
          if (((bitField0_ & 0x00000100) != 0)) {
            f32Values_.makeImmutable();
            bitField0_ = (bitField0_ & ~0x00000100);
          }
          result.f32Values_ = f32Values_;
          if (((bitField0_ & 0x00000200) != 0)) {
            f64Values_.makeImmutable();
            bitField0_ = (bitField0_ & ~0x00000200);
          }
          result.f64Values_ = f64Values_;
          if (((bitField0_ & 0x00000400) != 0)) {
            boolValues_.makeImmutable();
            bitField0_ = (bitField0_ & ~0x00000400);
          }
          result.boolValues_ = boolValues_;
          if (((bitField0_ & 0x00000800) != 0)) {
            binaryValues_ = java.util.Collections.unmodifiableList(binaryValues_);
            bitField0_ = (bitField0_ & ~0x00000800);
          }
          result.binaryValues_ = binaryValues_;
          if (((bitField0_ & 0x00001000) != 0)) {
            stringValues_ = stringValues_.getUnmodifiableView();
            bitField0_ = (bitField0_ & ~0x00001000);
          }
          result.stringValues_ = stringValues_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof io.greptime.v1.Columns.Column.Values) {
            return mergeFrom((io.greptime.v1.Columns.Column.Values)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(io.greptime.v1.Columns.Column.Values other) {
          if (other == io.greptime.v1.Columns.Column.Values.getDefaultInstance()) return this;
          if (!other.i8Values_.isEmpty()) {
            if (i8Values_.isEmpty()) {
              i8Values_ = other.i8Values_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureI8ValuesIsMutable();
              i8Values_.addAll(other.i8Values_);
            }
            onChanged();
          }
          if (!other.i16Values_.isEmpty()) {
            if (i16Values_.isEmpty()) {
              i16Values_ = other.i16Values_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureI16ValuesIsMutable();
              i16Values_.addAll(other.i16Values_);
            }
            onChanged();
          }
          if (!other.i32Values_.isEmpty()) {
            if (i32Values_.isEmpty()) {
              i32Values_ = other.i32Values_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureI32ValuesIsMutable();
              i32Values_.addAll(other.i32Values_);
            }
            onChanged();
          }
          if (!other.i64Values_.isEmpty()) {
            if (i64Values_.isEmpty()) {
              i64Values_ = other.i64Values_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureI64ValuesIsMutable();
              i64Values_.addAll(other.i64Values_);
            }
            onChanged();
          }
          if (!other.u8Values_.isEmpty()) {
            if (u8Values_.isEmpty()) {
              u8Values_ = other.u8Values_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureU8ValuesIsMutable();
              u8Values_.addAll(other.u8Values_);
            }
            onChanged();
          }
          if (!other.u16Values_.isEmpty()) {
            if (u16Values_.isEmpty()) {
              u16Values_ = other.u16Values_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureU16ValuesIsMutable();
              u16Values_.addAll(other.u16Values_);
            }
            onChanged();
          }
          if (!other.u32Values_.isEmpty()) {
            if (u32Values_.isEmpty()) {
              u32Values_ = other.u32Values_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureU32ValuesIsMutable();
              u32Values_.addAll(other.u32Values_);
            }
            onChanged();
          }
          if (!other.u64Values_.isEmpty()) {
            if (u64Values_.isEmpty()) {
              u64Values_ = other.u64Values_;
              bitField0_ = (bitField0_ & ~0x00000080);
            } else {
              ensureU64ValuesIsMutable();
              u64Values_.addAll(other.u64Values_);
            }
            onChanged();
          }
          if (!other.f32Values_.isEmpty()) {
            if (f32Values_.isEmpty()) {
              f32Values_ = other.f32Values_;
              bitField0_ = (bitField0_ & ~0x00000100);
            } else {
              ensureF32ValuesIsMutable();
              f32Values_.addAll(other.f32Values_);
            }
            onChanged();
          }
          if (!other.f64Values_.isEmpty()) {
            if (f64Values_.isEmpty()) {
              f64Values_ = other.f64Values_;
              bitField0_ = (bitField0_ & ~0x00000200);
            } else {
              ensureF64ValuesIsMutable();
              f64Values_.addAll(other.f64Values_);
            }
            onChanged();
          }
          if (!other.boolValues_.isEmpty()) {
            if (boolValues_.isEmpty()) {
              boolValues_ = other.boolValues_;
              bitField0_ = (bitField0_ & ~0x00000400);
            } else {
              ensureBoolValuesIsMutable();
              boolValues_.addAll(other.boolValues_);
            }
            onChanged();
          }
          if (!other.binaryValues_.isEmpty()) {
            if (binaryValues_.isEmpty()) {
              binaryValues_ = other.binaryValues_;
              bitField0_ = (bitField0_ & ~0x00000800);
            } else {
              ensureBinaryValuesIsMutable();
              binaryValues_.addAll(other.binaryValues_);
            }
            onChanged();
          }
          if (!other.stringValues_.isEmpty()) {
            if (stringValues_.isEmpty()) {
              stringValues_ = other.stringValues_;
              bitField0_ = (bitField0_ & ~0x00001000);
            } else {
              ensureStringValuesIsMutable();
              stringValues_.addAll(other.stringValues_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          io.greptime.v1.Columns.Column.Values parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (io.greptime.v1.Columns.Column.Values) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private com.google.protobuf.Internal.IntList i8Values_ = emptyIntList();
        private void ensureI8ValuesIsMutable() {
          if (!((bitField0_ & 0x00000001) != 0)) {
            i8Values_ = mutableCopy(i8Values_);
            bitField0_ |= 0x00000001;
           }
        }
        /**
         * <code>repeated int32 i8_values = 1;</code>
         * @return A list containing the i8Values.
         */
        public java.util.List<java.lang.Integer>
            getI8ValuesList() {
          return ((bitField0_ & 0x00000001) != 0) ?
                   java.util.Collections.unmodifiableList(i8Values_) : i8Values_;
        }
        /**
         * <code>repeated int32 i8_values = 1;</code>
         * @return The count of i8Values.
         */
        public int getI8ValuesCount() {
          return i8Values_.size();
        }
        /**
         * <code>repeated int32 i8_values = 1;</code>
         * @param index The index of the element to return.
         * @return The i8Values at the given index.
         */
        public int getI8Values(int index) {
          return i8Values_.getInt(index);
        }
        /**
         * <code>repeated int32 i8_values = 1;</code>
         * @param index The index to set the value at.
         * @param value The i8Values to set.
         * @return This builder for chaining.
         */
        public Builder setI8Values(
            int index, int value) {
          ensureI8ValuesIsMutable();
          i8Values_.setInt(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 i8_values = 1;</code>
         * @param value The i8Values to add.
         * @return This builder for chaining.
         */
        public Builder addI8Values(int value) {
          ensureI8ValuesIsMutable();
          i8Values_.addInt(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 i8_values = 1;</code>
         * @param values The i8Values to add.
         * @return This builder for chaining.
         */
        public Builder addAllI8Values(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureI8ValuesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, i8Values_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 i8_values = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearI8Values() {
          i8Values_ = emptyIntList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }

        private com.google.protobuf.Internal.IntList i16Values_ = emptyIntList();
        private void ensureI16ValuesIsMutable() {
          if (!((bitField0_ & 0x00000002) != 0)) {
            i16Values_ = mutableCopy(i16Values_);
            bitField0_ |= 0x00000002;
           }
        }
        /**
         * <code>repeated int32 i16_values = 2;</code>
         * @return A list containing the i16Values.
         */
        public java.util.List<java.lang.Integer>
            getI16ValuesList() {
          return ((bitField0_ & 0x00000002) != 0) ?
                   java.util.Collections.unmodifiableList(i16Values_) : i16Values_;
        }
        /**
         * <code>repeated int32 i16_values = 2;</code>
         * @return The count of i16Values.
         */
        public int getI16ValuesCount() {
          return i16Values_.size();
        }
        /**
         * <code>repeated int32 i16_values = 2;</code>
         * @param index The index of the element to return.
         * @return The i16Values at the given index.
         */
        public int getI16Values(int index) {
          return i16Values_.getInt(index);
        }
        /**
         * <code>repeated int32 i16_values = 2;</code>
         * @param index The index to set the value at.
         * @param value The i16Values to set.
         * @return This builder for chaining.
         */
        public Builder setI16Values(
            int index, int value) {
          ensureI16ValuesIsMutable();
          i16Values_.setInt(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 i16_values = 2;</code>
         * @param value The i16Values to add.
         * @return This builder for chaining.
         */
        public Builder addI16Values(int value) {
          ensureI16ValuesIsMutable();
          i16Values_.addInt(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 i16_values = 2;</code>
         * @param values The i16Values to add.
         * @return This builder for chaining.
         */
        public Builder addAllI16Values(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureI16ValuesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, i16Values_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 i16_values = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearI16Values() {
          i16Values_ = emptyIntList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }

        private com.google.protobuf.Internal.IntList i32Values_ = emptyIntList();
        private void ensureI32ValuesIsMutable() {
          if (!((bitField0_ & 0x00000004) != 0)) {
            i32Values_ = mutableCopy(i32Values_);
            bitField0_ |= 0x00000004;
           }
        }
        /**
         * <code>repeated int32 i32_values = 3;</code>
         * @return A list containing the i32Values.
         */
        public java.util.List<java.lang.Integer>
            getI32ValuesList() {
          return ((bitField0_ & 0x00000004) != 0) ?
                   java.util.Collections.unmodifiableList(i32Values_) : i32Values_;
        }
        /**
         * <code>repeated int32 i32_values = 3;</code>
         * @return The count of i32Values.
         */
        public int getI32ValuesCount() {
          return i32Values_.size();
        }
        /**
         * <code>repeated int32 i32_values = 3;</code>
         * @param index The index of the element to return.
         * @return The i32Values at the given index.
         */
        public int getI32Values(int index) {
          return i32Values_.getInt(index);
        }
        /**
         * <code>repeated int32 i32_values = 3;</code>
         * @param index The index to set the value at.
         * @param value The i32Values to set.
         * @return This builder for chaining.
         */
        public Builder setI32Values(
            int index, int value) {
          ensureI32ValuesIsMutable();
          i32Values_.setInt(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 i32_values = 3;</code>
         * @param value The i32Values to add.
         * @return This builder for chaining.
         */
        public Builder addI32Values(int value) {
          ensureI32ValuesIsMutable();
          i32Values_.addInt(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 i32_values = 3;</code>
         * @param values The i32Values to add.
         * @return This builder for chaining.
         */
        public Builder addAllI32Values(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureI32ValuesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, i32Values_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int32 i32_values = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearI32Values() {
          i32Values_ = emptyIntList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
          return this;
        }

        private com.google.protobuf.Internal.LongList i64Values_ = emptyLongList();
        private void ensureI64ValuesIsMutable() {
          if (!((bitField0_ & 0x00000008) != 0)) {
            i64Values_ = mutableCopy(i64Values_);
            bitField0_ |= 0x00000008;
           }
        }
        /**
         * <code>repeated int64 i64_values = 4;</code>
         * @return A list containing the i64Values.
         */
        public java.util.List<java.lang.Long>
            getI64ValuesList() {
          return ((bitField0_ & 0x00000008) != 0) ?
                   java.util.Collections.unmodifiableList(i64Values_) : i64Values_;
        }
        /**
         * <code>repeated int64 i64_values = 4;</code>
         * @return The count of i64Values.
         */
        public int getI64ValuesCount() {
          return i64Values_.size();
        }
        /**
         * <code>repeated int64 i64_values = 4;</code>
         * @param index The index of the element to return.
         * @return The i64Values at the given index.
         */
        public long getI64Values(int index) {
          return i64Values_.getLong(index);
        }
        /**
         * <code>repeated int64 i64_values = 4;</code>
         * @param index The index to set the value at.
         * @param value The i64Values to set.
         * @return This builder for chaining.
         */
        public Builder setI64Values(
            int index, long value) {
          ensureI64ValuesIsMutable();
          i64Values_.setLong(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int64 i64_values = 4;</code>
         * @param value The i64Values to add.
         * @return This builder for chaining.
         */
        public Builder addI64Values(long value) {
          ensureI64ValuesIsMutable();
          i64Values_.addLong(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int64 i64_values = 4;</code>
         * @param values The i64Values to add.
         * @return This builder for chaining.
         */
        public Builder addAllI64Values(
            java.lang.Iterable<? extends java.lang.Long> values) {
          ensureI64ValuesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, i64Values_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated int64 i64_values = 4;</code>
         * @return This builder for chaining.
         */
        public Builder clearI64Values() {
          i64Values_ = emptyLongList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
          return this;
        }

        private com.google.protobuf.Internal.IntList u8Values_ = emptyIntList();
        private void ensureU8ValuesIsMutable() {
          if (!((bitField0_ & 0x00000010) != 0)) {
            u8Values_ = mutableCopy(u8Values_);
            bitField0_ |= 0x00000010;
           }
        }
        /**
         * <code>repeated uint32 u8_values = 5;</code>
         * @return A list containing the u8Values.
         */
        public java.util.List<java.lang.Integer>
            getU8ValuesList() {
          return ((bitField0_ & 0x00000010) != 0) ?
                   java.util.Collections.unmodifiableList(u8Values_) : u8Values_;
        }
        /**
         * <code>repeated uint32 u8_values = 5;</code>
         * @return The count of u8Values.
         */
        public int getU8ValuesCount() {
          return u8Values_.size();
        }
        /**
         * <code>repeated uint32 u8_values = 5;</code>
         * @param index The index of the element to return.
         * @return The u8Values at the given index.
         */
        public int getU8Values(int index) {
          return u8Values_.getInt(index);
        }
        /**
         * <code>repeated uint32 u8_values = 5;</code>
         * @param index The index to set the value at.
         * @param value The u8Values to set.
         * @return This builder for chaining.
         */
        public Builder setU8Values(
            int index, int value) {
          ensureU8ValuesIsMutable();
          u8Values_.setInt(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 u8_values = 5;</code>
         * @param value The u8Values to add.
         * @return This builder for chaining.
         */
        public Builder addU8Values(int value) {
          ensureU8ValuesIsMutable();
          u8Values_.addInt(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 u8_values = 5;</code>
         * @param values The u8Values to add.
         * @return This builder for chaining.
         */
        public Builder addAllU8Values(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureU8ValuesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, u8Values_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 u8_values = 5;</code>
         * @return This builder for chaining.
         */
        public Builder clearU8Values() {
          u8Values_ = emptyIntList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
          return this;
        }

        private com.google.protobuf.Internal.IntList u16Values_ = emptyIntList();
        private void ensureU16ValuesIsMutable() {
          if (!((bitField0_ & 0x00000020) != 0)) {
            u16Values_ = mutableCopy(u16Values_);
            bitField0_ |= 0x00000020;
           }
        }
        /**
         * <code>repeated uint32 u16_values = 6;</code>
         * @return A list containing the u16Values.
         */
        public java.util.List<java.lang.Integer>
            getU16ValuesList() {
          return ((bitField0_ & 0x00000020) != 0) ?
                   java.util.Collections.unmodifiableList(u16Values_) : u16Values_;
        }
        /**
         * <code>repeated uint32 u16_values = 6;</code>
         * @return The count of u16Values.
         */
        public int getU16ValuesCount() {
          return u16Values_.size();
        }
        /**
         * <code>repeated uint32 u16_values = 6;</code>
         * @param index The index of the element to return.
         * @return The u16Values at the given index.
         */
        public int getU16Values(int index) {
          return u16Values_.getInt(index);
        }
        /**
         * <code>repeated uint32 u16_values = 6;</code>
         * @param index The index to set the value at.
         * @param value The u16Values to set.
         * @return This builder for chaining.
         */
        public Builder setU16Values(
            int index, int value) {
          ensureU16ValuesIsMutable();
          u16Values_.setInt(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 u16_values = 6;</code>
         * @param value The u16Values to add.
         * @return This builder for chaining.
         */
        public Builder addU16Values(int value) {
          ensureU16ValuesIsMutable();
          u16Values_.addInt(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 u16_values = 6;</code>
         * @param values The u16Values to add.
         * @return This builder for chaining.
         */
        public Builder addAllU16Values(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureU16ValuesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, u16Values_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 u16_values = 6;</code>
         * @return This builder for chaining.
         */
        public Builder clearU16Values() {
          u16Values_ = emptyIntList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
          return this;
        }

        private com.google.protobuf.Internal.IntList u32Values_ = emptyIntList();
        private void ensureU32ValuesIsMutable() {
          if (!((bitField0_ & 0x00000040) != 0)) {
            u32Values_ = mutableCopy(u32Values_);
            bitField0_ |= 0x00000040;
           }
        }
        /**
         * <code>repeated uint32 u32_values = 7;</code>
         * @return A list containing the u32Values.
         */
        public java.util.List<java.lang.Integer>
            getU32ValuesList() {
          return ((bitField0_ & 0x00000040) != 0) ?
                   java.util.Collections.unmodifiableList(u32Values_) : u32Values_;
        }
        /**
         * <code>repeated uint32 u32_values = 7;</code>
         * @return The count of u32Values.
         */
        public int getU32ValuesCount() {
          return u32Values_.size();
        }
        /**
         * <code>repeated uint32 u32_values = 7;</code>
         * @param index The index of the element to return.
         * @return The u32Values at the given index.
         */
        public int getU32Values(int index) {
          return u32Values_.getInt(index);
        }
        /**
         * <code>repeated uint32 u32_values = 7;</code>
         * @param index The index to set the value at.
         * @param value The u32Values to set.
         * @return This builder for chaining.
         */
        public Builder setU32Values(
            int index, int value) {
          ensureU32ValuesIsMutable();
          u32Values_.setInt(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 u32_values = 7;</code>
         * @param value The u32Values to add.
         * @return This builder for chaining.
         */
        public Builder addU32Values(int value) {
          ensureU32ValuesIsMutable();
          u32Values_.addInt(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 u32_values = 7;</code>
         * @param values The u32Values to add.
         * @return This builder for chaining.
         */
        public Builder addAllU32Values(
            java.lang.Iterable<? extends java.lang.Integer> values) {
          ensureU32ValuesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, u32Values_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint32 u32_values = 7;</code>
         * @return This builder for chaining.
         */
        public Builder clearU32Values() {
          u32Values_ = emptyIntList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
          return this;
        }

        private com.google.protobuf.Internal.LongList u64Values_ = emptyLongList();
        private void ensureU64ValuesIsMutable() {
          if (!((bitField0_ & 0x00000080) != 0)) {
            u64Values_ = mutableCopy(u64Values_);
            bitField0_ |= 0x00000080;
           }
        }
        /**
         * <code>repeated uint64 u64_values = 8;</code>
         * @return A list containing the u64Values.
         */
        public java.util.List<java.lang.Long>
            getU64ValuesList() {
          return ((bitField0_ & 0x00000080) != 0) ?
                   java.util.Collections.unmodifiableList(u64Values_) : u64Values_;
        }
        /**
         * <code>repeated uint64 u64_values = 8;</code>
         * @return The count of u64Values.
         */
        public int getU64ValuesCount() {
          return u64Values_.size();
        }
        /**
         * <code>repeated uint64 u64_values = 8;</code>
         * @param index The index of the element to return.
         * @return The u64Values at the given index.
         */
        public long getU64Values(int index) {
          return u64Values_.getLong(index);
        }
        /**
         * <code>repeated uint64 u64_values = 8;</code>
         * @param index The index to set the value at.
         * @param value The u64Values to set.
         * @return This builder for chaining.
         */
        public Builder setU64Values(
            int index, long value) {
          ensureU64ValuesIsMutable();
          u64Values_.setLong(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint64 u64_values = 8;</code>
         * @param value The u64Values to add.
         * @return This builder for chaining.
         */
        public Builder addU64Values(long value) {
          ensureU64ValuesIsMutable();
          u64Values_.addLong(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint64 u64_values = 8;</code>
         * @param values The u64Values to add.
         * @return This builder for chaining.
         */
        public Builder addAllU64Values(
            java.lang.Iterable<? extends java.lang.Long> values) {
          ensureU64ValuesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, u64Values_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated uint64 u64_values = 8;</code>
         * @return This builder for chaining.
         */
        public Builder clearU64Values() {
          u64Values_ = emptyLongList();
          bitField0_ = (bitField0_ & ~0x00000080);
          onChanged();
          return this;
        }

        private com.google.protobuf.Internal.FloatList f32Values_ = emptyFloatList();
        private void ensureF32ValuesIsMutable() {
          if (!((bitField0_ & 0x00000100) != 0)) {
            f32Values_ = mutableCopy(f32Values_);
            bitField0_ |= 0x00000100;
           }
        }
        /**
         * <code>repeated float f32_values = 9;</code>
         * @return A list containing the f32Values.
         */
        public java.util.List<java.lang.Float>
            getF32ValuesList() {
          return ((bitField0_ & 0x00000100) != 0) ?
                   java.util.Collections.unmodifiableList(f32Values_) : f32Values_;
        }
        /**
         * <code>repeated float f32_values = 9;</code>
         * @return The count of f32Values.
         */
        public int getF32ValuesCount() {
          return f32Values_.size();
        }
        /**
         * <code>repeated float f32_values = 9;</code>
         * @param index The index of the element to return.
         * @return The f32Values at the given index.
         */
        public float getF32Values(int index) {
          return f32Values_.getFloat(index);
        }
        /**
         * <code>repeated float f32_values = 9;</code>
         * @param index The index to set the value at.
         * @param value The f32Values to set.
         * @return This builder for chaining.
         */
        public Builder setF32Values(
            int index, float value) {
          ensureF32ValuesIsMutable();
          f32Values_.setFloat(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated float f32_values = 9;</code>
         * @param value The f32Values to add.
         * @return This builder for chaining.
         */
        public Builder addF32Values(float value) {
          ensureF32ValuesIsMutable();
          f32Values_.addFloat(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated float f32_values = 9;</code>
         * @param values The f32Values to add.
         * @return This builder for chaining.
         */
        public Builder addAllF32Values(
            java.lang.Iterable<? extends java.lang.Float> values) {
          ensureF32ValuesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, f32Values_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated float f32_values = 9;</code>
         * @return This builder for chaining.
         */
        public Builder clearF32Values() {
          f32Values_ = emptyFloatList();
          bitField0_ = (bitField0_ & ~0x00000100);
          onChanged();
          return this;
        }

        private com.google.protobuf.Internal.DoubleList f64Values_ = emptyDoubleList();
        private void ensureF64ValuesIsMutable() {
          if (!((bitField0_ & 0x00000200) != 0)) {
            f64Values_ = mutableCopy(f64Values_);
            bitField0_ |= 0x00000200;
           }
        }
        /**
         * <code>repeated double f64_values = 10;</code>
         * @return A list containing the f64Values.
         */
        public java.util.List<java.lang.Double>
            getF64ValuesList() {
          return ((bitField0_ & 0x00000200) != 0) ?
                   java.util.Collections.unmodifiableList(f64Values_) : f64Values_;
        }
        /**
         * <code>repeated double f64_values = 10;</code>
         * @return The count of f64Values.
         */
        public int getF64ValuesCount() {
          return f64Values_.size();
        }
        /**
         * <code>repeated double f64_values = 10;</code>
         * @param index The index of the element to return.
         * @return The f64Values at the given index.
         */
        public double getF64Values(int index) {
          return f64Values_.getDouble(index);
        }
        /**
         * <code>repeated double f64_values = 10;</code>
         * @param index The index to set the value at.
         * @param value The f64Values to set.
         * @return This builder for chaining.
         */
        public Builder setF64Values(
            int index, double value) {
          ensureF64ValuesIsMutable();
          f64Values_.setDouble(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double f64_values = 10;</code>
         * @param value The f64Values to add.
         * @return This builder for chaining.
         */
        public Builder addF64Values(double value) {
          ensureF64ValuesIsMutable();
          f64Values_.addDouble(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double f64_values = 10;</code>
         * @param values The f64Values to add.
         * @return This builder for chaining.
         */
        public Builder addAllF64Values(
            java.lang.Iterable<? extends java.lang.Double> values) {
          ensureF64ValuesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, f64Values_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double f64_values = 10;</code>
         * @return This builder for chaining.
         */
        public Builder clearF64Values() {
          f64Values_ = emptyDoubleList();
          bitField0_ = (bitField0_ & ~0x00000200);
          onChanged();
          return this;
        }

        private com.google.protobuf.Internal.BooleanList boolValues_ = emptyBooleanList();
        private void ensureBoolValuesIsMutable() {
          if (!((bitField0_ & 0x00000400) != 0)) {
            boolValues_ = mutableCopy(boolValues_);
            bitField0_ |= 0x00000400;
           }
        }
        /**
         * <code>repeated bool bool_values = 11;</code>
         * @return A list containing the boolValues.
         */
        public java.util.List<java.lang.Boolean>
            getBoolValuesList() {
          return ((bitField0_ & 0x00000400) != 0) ?
                   java.util.Collections.unmodifiableList(boolValues_) : boolValues_;
        }
        /**
         * <code>repeated bool bool_values = 11;</code>
         * @return The count of boolValues.
         */
        public int getBoolValuesCount() {
          return boolValues_.size();
        }
        /**
         * <code>repeated bool bool_values = 11;</code>
         * @param index The index of the element to return.
         * @return The boolValues at the given index.
         */
        public boolean getBoolValues(int index) {
          return boolValues_.getBoolean(index);
        }
        /**
         * <code>repeated bool bool_values = 11;</code>
         * @param index The index to set the value at.
         * @param value The boolValues to set.
         * @return This builder for chaining.
         */
        public Builder setBoolValues(
            int index, boolean value) {
          ensureBoolValuesIsMutable();
          boolValues_.setBoolean(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated bool bool_values = 11;</code>
         * @param value The boolValues to add.
         * @return This builder for chaining.
         */
        public Builder addBoolValues(boolean value) {
          ensureBoolValuesIsMutable();
          boolValues_.addBoolean(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated bool bool_values = 11;</code>
         * @param values The boolValues to add.
         * @return This builder for chaining.
         */
        public Builder addAllBoolValues(
            java.lang.Iterable<? extends java.lang.Boolean> values) {
          ensureBoolValuesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, boolValues_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated bool bool_values = 11;</code>
         * @return This builder for chaining.
         */
        public Builder clearBoolValues() {
          boolValues_ = emptyBooleanList();
          bitField0_ = (bitField0_ & ~0x00000400);
          onChanged();
          return this;
        }

        private java.util.List<com.google.protobuf.ByteString> binaryValues_ = java.util.Collections.emptyList();
        private void ensureBinaryValuesIsMutable() {
          if (!((bitField0_ & 0x00000800) != 0)) {
            binaryValues_ = new java.util.ArrayList<com.google.protobuf.ByteString>(binaryValues_);
            bitField0_ |= 0x00000800;
           }
        }
        /**
         * <code>repeated bytes binary_values = 12;</code>
         * @return A list containing the binaryValues.
         */
        public java.util.List<com.google.protobuf.ByteString>
            getBinaryValuesList() {
          return ((bitField0_ & 0x00000800) != 0) ?
                   java.util.Collections.unmodifiableList(binaryValues_) : binaryValues_;
        }
        /**
         * <code>repeated bytes binary_values = 12;</code>
         * @return The count of binaryValues.
         */
        public int getBinaryValuesCount() {
          return binaryValues_.size();
        }
        /**
         * <code>repeated bytes binary_values = 12;</code>
         * @param index The index of the element to return.
         * @return The binaryValues at the given index.
         */
        public com.google.protobuf.ByteString getBinaryValues(int index) {
          return binaryValues_.get(index);
        }
        /**
         * <code>repeated bytes binary_values = 12;</code>
         * @param index The index to set the value at.
         * @param value The binaryValues to set.
         * @return This builder for chaining.
         */
        public Builder setBinaryValues(
            int index, com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureBinaryValuesIsMutable();
          binaryValues_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated bytes binary_values = 12;</code>
         * @param value The binaryValues to add.
         * @return This builder for chaining.
         */
        public Builder addBinaryValues(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureBinaryValuesIsMutable();
          binaryValues_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated bytes binary_values = 12;</code>
         * @param values The binaryValues to add.
         * @return This builder for chaining.
         */
        public Builder addAllBinaryValues(
            java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
          ensureBinaryValuesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, binaryValues_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated bytes binary_values = 12;</code>
         * @return This builder for chaining.
         */
        public Builder clearBinaryValues() {
          binaryValues_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000800);
          onChanged();
          return this;
        }

        private com.google.protobuf.LazyStringList stringValues_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        private void ensureStringValuesIsMutable() {
          if (!((bitField0_ & 0x00001000) != 0)) {
            stringValues_ = new com.google.protobuf.LazyStringArrayList(stringValues_);
            bitField0_ |= 0x00001000;
           }
        }
        /**
         * <code>repeated string string_values = 13;</code>
         * @return A list containing the stringValues.
         */
        public com.google.protobuf.ProtocolStringList
            getStringValuesList() {
          return stringValues_.getUnmodifiableView();
        }
        /**
         * <code>repeated string string_values = 13;</code>
         * @return The count of stringValues.
         */
        public int getStringValuesCount() {
          return stringValues_.size();
        }
        /**
         * <code>repeated string string_values = 13;</code>
         * @param index The index of the element to return.
         * @return The stringValues at the given index.
         */
        public java.lang.String getStringValues(int index) {
          return stringValues_.get(index);
        }
        /**
         * <code>repeated string string_values = 13;</code>
         * @param index The index of the value to return.
         * @return The bytes of the stringValues at the given index.
         */
        public com.google.protobuf.ByteString
            getStringValuesBytes(int index) {
          return stringValues_.getByteString(index);
        }
        /**
         * <code>repeated string string_values = 13;</code>
         * @param index The index to set the value at.
         * @param value The stringValues to set.
         * @return This builder for chaining.
         */
        public Builder setStringValues(
            int index, java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureStringValuesIsMutable();
          stringValues_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string string_values = 13;</code>
         * @param value The stringValues to add.
         * @return This builder for chaining.
         */
        public Builder addStringValues(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureStringValuesIsMutable();
          stringValues_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string string_values = 13;</code>
         * @param values The stringValues to add.
         * @return This builder for chaining.
         */
        public Builder addAllStringValues(
            java.lang.Iterable<java.lang.String> values) {
          ensureStringValuesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, stringValues_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string string_values = 13;</code>
         * @return This builder for chaining.
         */
        public Builder clearStringValues() {
          stringValues_ = com.google.protobuf.LazyStringArrayList.EMPTY;
          bitField0_ = (bitField0_ & ~0x00001000);
          onChanged();
          return this;
        }
        /**
         * <code>repeated string string_values = 13;</code>
         * @param value The bytes of the stringValues to add.
         * @return This builder for chaining.
         */
        public Builder addStringValuesBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          ensureStringValuesIsMutable();
          stringValues_.add(value);
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:greptime.v1.Column.Values)
      }

      // @@protoc_insertion_point(class_scope:greptime.v1.Column.Values)
      private static final io.greptime.v1.Columns.Column.Values DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new io.greptime.v1.Columns.Column.Values();
      }

      public static io.greptime.v1.Columns.Column.Values getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Values>
          PARSER = new com.google.protobuf.AbstractParser<Values>() {
        @java.lang.Override
        public Values parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Values(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Values> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Values> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public io.greptime.v1.Columns.Column.Values getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int COLUMN_NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object columnName_;
    /**
     * <code>string column_name = 1;</code>
     * @return The columnName.
     */
    @java.lang.Override
    public java.lang.String getColumnName() {
      java.lang.Object ref = columnName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        columnName_ = s;
        return s;
      }
    }
    /**
     * <code>string column_name = 1;</code>
     * @return The bytes for columnName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getColumnNameBytes() {
      java.lang.Object ref = columnName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        columnName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SEMANTIC_TYPE_FIELD_NUMBER = 2;
    private int semanticType_;
    /**
     * <code>.greptime.v1.Column.SemanticType semantic_type = 2;</code>
     * @return The enum numeric value on the wire for semanticType.
     */
    @java.lang.Override public int getSemanticTypeValue() {
      return semanticType_;
    }
    /**
     * <code>.greptime.v1.Column.SemanticType semantic_type = 2;</code>
     * @return The semanticType.
     */
    @java.lang.Override public io.greptime.v1.Columns.Column.SemanticType getSemanticType() {
      @SuppressWarnings("deprecation")
      io.greptime.v1.Columns.Column.SemanticType result = io.greptime.v1.Columns.Column.SemanticType.valueOf(semanticType_);
      return result == null ? io.greptime.v1.Columns.Column.SemanticType.UNRECOGNIZED : result;
    }

    public static final int VALUES_FIELD_NUMBER = 3;
    private io.greptime.v1.Columns.Column.Values values_;
    /**
     * <pre>
     * The array of non-null values in this column.
     * For example: suppose there is a column "foo" that contains some int32 values (1, 2, 3, 4, 5, null, 7, 8, 9, null);
     *   column:
     *     column_name: foo
     *     semantic_type: Tag
     *     values: 1, 2, 3, 4, 5, 7, 8, 9
     *     null_masks: 00100000 00000010
     * </pre>
     *
     * <code>.greptime.v1.Column.Values values = 3;</code>
     * @return Whether the values field is set.
     */
    @java.lang.Override
    public boolean hasValues() {
      return values_ != null;
    }
    /**
     * <pre>
     * The array of non-null values in this column.
     * For example: suppose there is a column "foo" that contains some int32 values (1, 2, 3, 4, 5, null, 7, 8, 9, null);
     *   column:
     *     column_name: foo
     *     semantic_type: Tag
     *     values: 1, 2, 3, 4, 5, 7, 8, 9
     *     null_masks: 00100000 00000010
     * </pre>
     *
     * <code>.greptime.v1.Column.Values values = 3;</code>
     * @return The values.
     */
    @java.lang.Override
    public io.greptime.v1.Columns.Column.Values getValues() {
      return values_ == null ? io.greptime.v1.Columns.Column.Values.getDefaultInstance() : values_;
    }
    /**
     * <pre>
     * The array of non-null values in this column.
     * For example: suppose there is a column "foo" that contains some int32 values (1, 2, 3, 4, 5, null, 7, 8, 9, null);
     *   column:
     *     column_name: foo
     *     semantic_type: Tag
     *     values: 1, 2, 3, 4, 5, 7, 8, 9
     *     null_masks: 00100000 00000010
     * </pre>
     *
     * <code>.greptime.v1.Column.Values values = 3;</code>
     */
    @java.lang.Override
    public io.greptime.v1.Columns.Column.ValuesOrBuilder getValuesOrBuilder() {
      return getValues();
    }

    public static final int VALUE_INDEX_FIELD_NUMBER = 4;
    private int valueIndex_;
    /**
     * <code>int32 value_index = 4;</code>
     * @return The valueIndex.
     */
    @java.lang.Override
    public int getValueIndex() {
      return valueIndex_;
    }

    public static final int NULL_MASK_FIELD_NUMBER = 5;
    private com.google.protobuf.ByteString nullMask_;
    /**
     * <pre>
     * Mask maps the positions of null values.
     * If a bit in null_mask is 1, it indicates that the column value at that position is null.
     * </pre>
     *
     * <code>bytes null_mask = 5;</code>
     * @return The nullMask.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getNullMask() {
      return nullMask_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(columnName_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, columnName_);
      }
      if (semanticType_ != io.greptime.v1.Columns.Column.SemanticType.TAG.getNumber()) {
        output.writeEnum(2, semanticType_);
      }
      if (values_ != null) {
        output.writeMessage(3, getValues());
      }
      if (valueIndex_ != 0) {
        output.writeInt32(4, valueIndex_);
      }
      if (!nullMask_.isEmpty()) {
        output.writeBytes(5, nullMask_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(columnName_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, columnName_);
      }
      if (semanticType_ != io.greptime.v1.Columns.Column.SemanticType.TAG.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, semanticType_);
      }
      if (values_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getValues());
      }
      if (valueIndex_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, valueIndex_);
      }
      if (!nullMask_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, nullMask_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.greptime.v1.Columns.Column)) {
        return super.equals(obj);
      }
      io.greptime.v1.Columns.Column other = (io.greptime.v1.Columns.Column) obj;

      if (!getColumnName()
          .equals(other.getColumnName())) return false;
      if (semanticType_ != other.semanticType_) return false;
      if (hasValues() != other.hasValues()) return false;
      if (hasValues()) {
        if (!getValues()
            .equals(other.getValues())) return false;
      }
      if (getValueIndex()
          != other.getValueIndex()) return false;
      if (!getNullMask()
          .equals(other.getNullMask())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + COLUMN_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getColumnName().hashCode();
      hash = (37 * hash) + SEMANTIC_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + semanticType_;
      if (hasValues()) {
        hash = (37 * hash) + VALUES_FIELD_NUMBER;
        hash = (53 * hash) + getValues().hashCode();
      }
      hash = (37 * hash) + VALUE_INDEX_FIELD_NUMBER;
      hash = (53 * hash) + getValueIndex();
      hash = (37 * hash) + NULL_MASK_FIELD_NUMBER;
      hash = (53 * hash) + getNullMask().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.greptime.v1.Columns.Column parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.greptime.v1.Columns.Column parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.greptime.v1.Columns.Column parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.greptime.v1.Columns.Column parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.greptime.v1.Columns.Column parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.greptime.v1.Columns.Column parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.greptime.v1.Columns.Column parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.greptime.v1.Columns.Column parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.greptime.v1.Columns.Column parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.greptime.v1.Columns.Column parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.greptime.v1.Columns.Column parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.greptime.v1.Columns.Column parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.greptime.v1.Columns.Column prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code greptime.v1.Column}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:greptime.v1.Column)
        io.greptime.v1.Columns.ColumnOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.greptime.v1.Columns.internal_static_greptime_v1_Column_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.greptime.v1.Columns.internal_static_greptime_v1_Column_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.greptime.v1.Columns.Column.class, io.greptime.v1.Columns.Column.Builder.class);
      }

      // Construct using io.greptime.v1.Columns.Column.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        columnName_ = "";

        semanticType_ = 0;

        if (valuesBuilder_ == null) {
          values_ = null;
        } else {
          values_ = null;
          valuesBuilder_ = null;
        }
        valueIndex_ = 0;

        nullMask_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.greptime.v1.Columns.internal_static_greptime_v1_Column_descriptor;
      }

      @java.lang.Override
      public io.greptime.v1.Columns.Column getDefaultInstanceForType() {
        return io.greptime.v1.Columns.Column.getDefaultInstance();
      }

      @java.lang.Override
      public io.greptime.v1.Columns.Column build() {
        io.greptime.v1.Columns.Column result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.greptime.v1.Columns.Column buildPartial() {
        io.greptime.v1.Columns.Column result = new io.greptime.v1.Columns.Column(this);
        result.columnName_ = columnName_;
        result.semanticType_ = semanticType_;
        if (valuesBuilder_ == null) {
          result.values_ = values_;
        } else {
          result.values_ = valuesBuilder_.build();
        }
        result.valueIndex_ = valueIndex_;
        result.nullMask_ = nullMask_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.greptime.v1.Columns.Column) {
          return mergeFrom((io.greptime.v1.Columns.Column)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.greptime.v1.Columns.Column other) {
        if (other == io.greptime.v1.Columns.Column.getDefaultInstance()) return this;
        if (!other.getColumnName().isEmpty()) {
          columnName_ = other.columnName_;
          onChanged();
        }
        if (other.semanticType_ != 0) {
          setSemanticTypeValue(other.getSemanticTypeValue());
        }
        if (other.hasValues()) {
          mergeValues(other.getValues());
        }
        if (other.getValueIndex() != 0) {
          setValueIndex(other.getValueIndex());
        }
        if (other.getNullMask() != com.google.protobuf.ByteString.EMPTY) {
          setNullMask(other.getNullMask());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.greptime.v1.Columns.Column parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.greptime.v1.Columns.Column) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object columnName_ = "";
      /**
       * <code>string column_name = 1;</code>
       * @return The columnName.
       */
      public java.lang.String getColumnName() {
        java.lang.Object ref = columnName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          columnName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string column_name = 1;</code>
       * @return The bytes for columnName.
       */
      public com.google.protobuf.ByteString
          getColumnNameBytes() {
        java.lang.Object ref = columnName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          columnName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string column_name = 1;</code>
       * @param value The columnName to set.
       * @return This builder for chaining.
       */
      public Builder setColumnName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        columnName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string column_name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearColumnName() {
        
        columnName_ = getDefaultInstance().getColumnName();
        onChanged();
        return this;
      }
      /**
       * <code>string column_name = 1;</code>
       * @param value The bytes for columnName to set.
       * @return This builder for chaining.
       */
      public Builder setColumnNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        columnName_ = value;
        onChanged();
        return this;
      }

      private int semanticType_ = 0;
      /**
       * <code>.greptime.v1.Column.SemanticType semantic_type = 2;</code>
       * @return The enum numeric value on the wire for semanticType.
       */
      @java.lang.Override public int getSemanticTypeValue() {
        return semanticType_;
      }
      /**
       * <code>.greptime.v1.Column.SemanticType semantic_type = 2;</code>
       * @param value The enum numeric value on the wire for semanticType to set.
       * @return This builder for chaining.
       */
      public Builder setSemanticTypeValue(int value) {
        
        semanticType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.greptime.v1.Column.SemanticType semantic_type = 2;</code>
       * @return The semanticType.
       */
      @java.lang.Override
      public io.greptime.v1.Columns.Column.SemanticType getSemanticType() {
        @SuppressWarnings("deprecation")
        io.greptime.v1.Columns.Column.SemanticType result = io.greptime.v1.Columns.Column.SemanticType.valueOf(semanticType_);
        return result == null ? io.greptime.v1.Columns.Column.SemanticType.UNRECOGNIZED : result;
      }
      /**
       * <code>.greptime.v1.Column.SemanticType semantic_type = 2;</code>
       * @param value The semanticType to set.
       * @return This builder for chaining.
       */
      public Builder setSemanticType(io.greptime.v1.Columns.Column.SemanticType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        semanticType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.greptime.v1.Column.SemanticType semantic_type = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearSemanticType() {
        
        semanticType_ = 0;
        onChanged();
        return this;
      }

      private io.greptime.v1.Columns.Column.Values values_;
      private com.google.protobuf.SingleFieldBuilderV3<
          io.greptime.v1.Columns.Column.Values, io.greptime.v1.Columns.Column.Values.Builder, io.greptime.v1.Columns.Column.ValuesOrBuilder> valuesBuilder_;
      /**
       * <pre>
       * The array of non-null values in this column.
       * For example: suppose there is a column "foo" that contains some int32 values (1, 2, 3, 4, 5, null, 7, 8, 9, null);
       *   column:
       *     column_name: foo
       *     semantic_type: Tag
       *     values: 1, 2, 3, 4, 5, 7, 8, 9
       *     null_masks: 00100000 00000010
       * </pre>
       *
       * <code>.greptime.v1.Column.Values values = 3;</code>
       * @return Whether the values field is set.
       */
      public boolean hasValues() {
        return valuesBuilder_ != null || values_ != null;
      }
      /**
       * <pre>
       * The array of non-null values in this column.
       * For example: suppose there is a column "foo" that contains some int32 values (1, 2, 3, 4, 5, null, 7, 8, 9, null);
       *   column:
       *     column_name: foo
       *     semantic_type: Tag
       *     values: 1, 2, 3, 4, 5, 7, 8, 9
       *     null_masks: 00100000 00000010
       * </pre>
       *
       * <code>.greptime.v1.Column.Values values = 3;</code>
       * @return The values.
       */
      public io.greptime.v1.Columns.Column.Values getValues() {
        if (valuesBuilder_ == null) {
          return values_ == null ? io.greptime.v1.Columns.Column.Values.getDefaultInstance() : values_;
        } else {
          return valuesBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The array of non-null values in this column.
       * For example: suppose there is a column "foo" that contains some int32 values (1, 2, 3, 4, 5, null, 7, 8, 9, null);
       *   column:
       *     column_name: foo
       *     semantic_type: Tag
       *     values: 1, 2, 3, 4, 5, 7, 8, 9
       *     null_masks: 00100000 00000010
       * </pre>
       *
       * <code>.greptime.v1.Column.Values values = 3;</code>
       */
      public Builder setValues(io.greptime.v1.Columns.Column.Values value) {
        if (valuesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          values_ = value;
          onChanged();
        } else {
          valuesBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The array of non-null values in this column.
       * For example: suppose there is a column "foo" that contains some int32 values (1, 2, 3, 4, 5, null, 7, 8, 9, null);
       *   column:
       *     column_name: foo
       *     semantic_type: Tag
       *     values: 1, 2, 3, 4, 5, 7, 8, 9
       *     null_masks: 00100000 00000010
       * </pre>
       *
       * <code>.greptime.v1.Column.Values values = 3;</code>
       */
      public Builder setValues(
          io.greptime.v1.Columns.Column.Values.Builder builderForValue) {
        if (valuesBuilder_ == null) {
          values_ = builderForValue.build();
          onChanged();
        } else {
          valuesBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The array of non-null values in this column.
       * For example: suppose there is a column "foo" that contains some int32 values (1, 2, 3, 4, 5, null, 7, 8, 9, null);
       *   column:
       *     column_name: foo
       *     semantic_type: Tag
       *     values: 1, 2, 3, 4, 5, 7, 8, 9
       *     null_masks: 00100000 00000010
       * </pre>
       *
       * <code>.greptime.v1.Column.Values values = 3;</code>
       */
      public Builder mergeValues(io.greptime.v1.Columns.Column.Values value) {
        if (valuesBuilder_ == null) {
          if (values_ != null) {
            values_ =
              io.greptime.v1.Columns.Column.Values.newBuilder(values_).mergeFrom(value).buildPartial();
          } else {
            values_ = value;
          }
          onChanged();
        } else {
          valuesBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The array of non-null values in this column.
       * For example: suppose there is a column "foo" that contains some int32 values (1, 2, 3, 4, 5, null, 7, 8, 9, null);
       *   column:
       *     column_name: foo
       *     semantic_type: Tag
       *     values: 1, 2, 3, 4, 5, 7, 8, 9
       *     null_masks: 00100000 00000010
       * </pre>
       *
       * <code>.greptime.v1.Column.Values values = 3;</code>
       */
      public Builder clearValues() {
        if (valuesBuilder_ == null) {
          values_ = null;
          onChanged();
        } else {
          values_ = null;
          valuesBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The array of non-null values in this column.
       * For example: suppose there is a column "foo" that contains some int32 values (1, 2, 3, 4, 5, null, 7, 8, 9, null);
       *   column:
       *     column_name: foo
       *     semantic_type: Tag
       *     values: 1, 2, 3, 4, 5, 7, 8, 9
       *     null_masks: 00100000 00000010
       * </pre>
       *
       * <code>.greptime.v1.Column.Values values = 3;</code>
       */
      public io.greptime.v1.Columns.Column.Values.Builder getValuesBuilder() {
        
        onChanged();
        return getValuesFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The array of non-null values in this column.
       * For example: suppose there is a column "foo" that contains some int32 values (1, 2, 3, 4, 5, null, 7, 8, 9, null);
       *   column:
       *     column_name: foo
       *     semantic_type: Tag
       *     values: 1, 2, 3, 4, 5, 7, 8, 9
       *     null_masks: 00100000 00000010
       * </pre>
       *
       * <code>.greptime.v1.Column.Values values = 3;</code>
       */
      public io.greptime.v1.Columns.Column.ValuesOrBuilder getValuesOrBuilder() {
        if (valuesBuilder_ != null) {
          return valuesBuilder_.getMessageOrBuilder();
        } else {
          return values_ == null ?
              io.greptime.v1.Columns.Column.Values.getDefaultInstance() : values_;
        }
      }
      /**
       * <pre>
       * The array of non-null values in this column.
       * For example: suppose there is a column "foo" that contains some int32 values (1, 2, 3, 4, 5, null, 7, 8, 9, null);
       *   column:
       *     column_name: foo
       *     semantic_type: Tag
       *     values: 1, 2, 3, 4, 5, 7, 8, 9
       *     null_masks: 00100000 00000010
       * </pre>
       *
       * <code>.greptime.v1.Column.Values values = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          io.greptime.v1.Columns.Column.Values, io.greptime.v1.Columns.Column.Values.Builder, io.greptime.v1.Columns.Column.ValuesOrBuilder> 
          getValuesFieldBuilder() {
        if (valuesBuilder_ == null) {
          valuesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              io.greptime.v1.Columns.Column.Values, io.greptime.v1.Columns.Column.Values.Builder, io.greptime.v1.Columns.Column.ValuesOrBuilder>(
                  getValues(),
                  getParentForChildren(),
                  isClean());
          values_ = null;
        }
        return valuesBuilder_;
      }

      private int valueIndex_ ;
      /**
       * <code>int32 value_index = 4;</code>
       * @return The valueIndex.
       */
      @java.lang.Override
      public int getValueIndex() {
        return valueIndex_;
      }
      /**
       * <code>int32 value_index = 4;</code>
       * @param value The valueIndex to set.
       * @return This builder for chaining.
       */
      public Builder setValueIndex(int value) {
        
        valueIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 value_index = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearValueIndex() {
        
        valueIndex_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString nullMask_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Mask maps the positions of null values.
       * If a bit in null_mask is 1, it indicates that the column value at that position is null.
       * </pre>
       *
       * <code>bytes null_mask = 5;</code>
       * @return The nullMask.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getNullMask() {
        return nullMask_;
      }
      /**
       * <pre>
       * Mask maps the positions of null values.
       * If a bit in null_mask is 1, it indicates that the column value at that position is null.
       * </pre>
       *
       * <code>bytes null_mask = 5;</code>
       * @param value The nullMask to set.
       * @return This builder for chaining.
       */
      public Builder setNullMask(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        nullMask_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Mask maps the positions of null values.
       * If a bit in null_mask is 1, it indicates that the column value at that position is null.
       * </pre>
       *
       * <code>bytes null_mask = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearNullMask() {
        
        nullMask_ = getDefaultInstance().getNullMask();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:greptime.v1.Column)
    }

    // @@protoc_insertion_point(class_scope:greptime.v1.Column)
    private static final io.greptime.v1.Columns.Column DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.greptime.v1.Columns.Column();
    }

    public static io.greptime.v1.Columns.Column getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Column>
        PARSER = new com.google.protobuf.AbstractParser<Column>() {
      @java.lang.Override
      public Column parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Column(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Column> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Column> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.greptime.v1.Columns.Column getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ColumnDefOrBuilder extends
      // @@protoc_insertion_point(interface_extends:greptime.v1.ColumnDef)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string name = 1;</code>
     * @return The name.
     */
    java.lang.String getName();
    /**
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>.greptime.v1.ColumnDataType data_type = 2;</code>
     * @return The enum numeric value on the wire for dataType.
     */
    int getDataTypeValue();
    /**
     * <code>.greptime.v1.ColumnDataType data_type = 2;</code>
     * @return The dataType.
     */
    io.greptime.v1.Columns.ColumnDataType getDataType();

    /**
     * <code>bool is_nullable = 3;</code>
     * @return The isNullable.
     */
    boolean getIsNullable();
  }
  /**
   * Protobuf type {@code greptime.v1.ColumnDef}
   */
  public static final class ColumnDef extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:greptime.v1.ColumnDef)
      ColumnDefOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ColumnDef.newBuilder() to construct.
    private ColumnDef(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ColumnDef() {
      name_ = "";
      dataType_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ColumnDef();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ColumnDef(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              dataType_ = rawValue;
              break;
            }
            case 24: {

              isNullable_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.greptime.v1.Columns.internal_static_greptime_v1_ColumnDef_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.greptime.v1.Columns.internal_static_greptime_v1_ColumnDef_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.greptime.v1.Columns.ColumnDef.class, io.greptime.v1.Columns.ColumnDef.Builder.class);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <code>string name = 1;</code>
     * @return The name.
     */
    @java.lang.Override
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 1;</code>
     * @return The bytes for name.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DATA_TYPE_FIELD_NUMBER = 2;
    private int dataType_;
    /**
     * <code>.greptime.v1.ColumnDataType data_type = 2;</code>
     * @return The enum numeric value on the wire for dataType.
     */
    @java.lang.Override public int getDataTypeValue() {
      return dataType_;
    }
    /**
     * <code>.greptime.v1.ColumnDataType data_type = 2;</code>
     * @return The dataType.
     */
    @java.lang.Override public io.greptime.v1.Columns.ColumnDataType getDataType() {
      @SuppressWarnings("deprecation")
      io.greptime.v1.Columns.ColumnDataType result = io.greptime.v1.Columns.ColumnDataType.valueOf(dataType_);
      return result == null ? io.greptime.v1.Columns.ColumnDataType.UNRECOGNIZED : result;
    }

    public static final int IS_NULLABLE_FIELD_NUMBER = 3;
    private boolean isNullable_;
    /**
     * <code>bool is_nullable = 3;</code>
     * @return The isNullable.
     */
    @java.lang.Override
    public boolean getIsNullable() {
      return isNullable_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (dataType_ != io.greptime.v1.Columns.ColumnDataType.BOOLEAN.getNumber()) {
        output.writeEnum(2, dataType_);
      }
      if (isNullable_ != false) {
        output.writeBool(3, isNullable_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(name_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (dataType_ != io.greptime.v1.Columns.ColumnDataType.BOOLEAN.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, dataType_);
      }
      if (isNullable_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, isNullable_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.greptime.v1.Columns.ColumnDef)) {
        return super.equals(obj);
      }
      io.greptime.v1.Columns.ColumnDef other = (io.greptime.v1.Columns.ColumnDef) obj;

      if (!getName()
          .equals(other.getName())) return false;
      if (dataType_ != other.dataType_) return false;
      if (getIsNullable()
          != other.getIsNullable()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + DATA_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + dataType_;
      hash = (37 * hash) + IS_NULLABLE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsNullable());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.greptime.v1.Columns.ColumnDef parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.greptime.v1.Columns.ColumnDef parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.greptime.v1.Columns.ColumnDef parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.greptime.v1.Columns.ColumnDef parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.greptime.v1.Columns.ColumnDef parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.greptime.v1.Columns.ColumnDef parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.greptime.v1.Columns.ColumnDef parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.greptime.v1.Columns.ColumnDef parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.greptime.v1.Columns.ColumnDef parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.greptime.v1.Columns.ColumnDef parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.greptime.v1.Columns.ColumnDef parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.greptime.v1.Columns.ColumnDef parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.greptime.v1.Columns.ColumnDef prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code greptime.v1.ColumnDef}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:greptime.v1.ColumnDef)
        io.greptime.v1.Columns.ColumnDefOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.greptime.v1.Columns.internal_static_greptime_v1_ColumnDef_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.greptime.v1.Columns.internal_static_greptime_v1_ColumnDef_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.greptime.v1.Columns.ColumnDef.class, io.greptime.v1.Columns.ColumnDef.Builder.class);
      }

      // Construct using io.greptime.v1.Columns.ColumnDef.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        name_ = "";

        dataType_ = 0;

        isNullable_ = false;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.greptime.v1.Columns.internal_static_greptime_v1_ColumnDef_descriptor;
      }

      @java.lang.Override
      public io.greptime.v1.Columns.ColumnDef getDefaultInstanceForType() {
        return io.greptime.v1.Columns.ColumnDef.getDefaultInstance();
      }

      @java.lang.Override
      public io.greptime.v1.Columns.ColumnDef build() {
        io.greptime.v1.Columns.ColumnDef result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.greptime.v1.Columns.ColumnDef buildPartial() {
        io.greptime.v1.Columns.ColumnDef result = new io.greptime.v1.Columns.ColumnDef(this);
        result.name_ = name_;
        result.dataType_ = dataType_;
        result.isNullable_ = isNullable_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.greptime.v1.Columns.ColumnDef) {
          return mergeFrom((io.greptime.v1.Columns.ColumnDef)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.greptime.v1.Columns.ColumnDef other) {
        if (other == io.greptime.v1.Columns.ColumnDef.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.dataType_ != 0) {
          setDataTypeValue(other.getDataTypeValue());
        }
        if (other.getIsNullable() != false) {
          setIsNullable(other.getIsNullable());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.greptime.v1.Columns.ColumnDef parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.greptime.v1.Columns.ColumnDef) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <code>string name = 1;</code>
       * @return The name.
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       * @return The bytes for name.
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       * @param value The name to set.
       * @return This builder for chaining.
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       * @param value The bytes for name to set.
       * @return This builder for chaining.
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private int dataType_ = 0;
      /**
       * <code>.greptime.v1.ColumnDataType data_type = 2;</code>
       * @return The enum numeric value on the wire for dataType.
       */
      @java.lang.Override public int getDataTypeValue() {
        return dataType_;
      }
      /**
       * <code>.greptime.v1.ColumnDataType data_type = 2;</code>
       * @param value The enum numeric value on the wire for dataType to set.
       * @return This builder for chaining.
       */
      public Builder setDataTypeValue(int value) {
        
        dataType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.greptime.v1.ColumnDataType data_type = 2;</code>
       * @return The dataType.
       */
      @java.lang.Override
      public io.greptime.v1.Columns.ColumnDataType getDataType() {
        @SuppressWarnings("deprecation")
        io.greptime.v1.Columns.ColumnDataType result = io.greptime.v1.Columns.ColumnDataType.valueOf(dataType_);
        return result == null ? io.greptime.v1.Columns.ColumnDataType.UNRECOGNIZED : result;
      }
      /**
       * <code>.greptime.v1.ColumnDataType data_type = 2;</code>
       * @param value The dataType to set.
       * @return This builder for chaining.
       */
      public Builder setDataType(io.greptime.v1.Columns.ColumnDataType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        dataType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.greptime.v1.ColumnDataType data_type = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearDataType() {
        
        dataType_ = 0;
        onChanged();
        return this;
      }

      private boolean isNullable_ ;
      /**
       * <code>bool is_nullable = 3;</code>
       * @return The isNullable.
       */
      @java.lang.Override
      public boolean getIsNullable() {
        return isNullable_;
      }
      /**
       * <code>bool is_nullable = 3;</code>
       * @param value The isNullable to set.
       * @return This builder for chaining.
       */
      public Builder setIsNullable(boolean value) {
        
        isNullable_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool is_nullable = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsNullable() {
        
        isNullable_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:greptime.v1.ColumnDef)
    }

    // @@protoc_insertion_point(class_scope:greptime.v1.ColumnDef)
    private static final io.greptime.v1.Columns.ColumnDef DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.greptime.v1.Columns.ColumnDef();
    }

    public static io.greptime.v1.Columns.ColumnDef getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ColumnDef>
        PARSER = new com.google.protobuf.AbstractParser<ColumnDef>() {
      @java.lang.Override
      public ColumnDef parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ColumnDef(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ColumnDef> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ColumnDef> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.greptime.v1.Columns.ColumnDef getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_greptime_v1_Column_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_greptime_v1_Column_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_greptime_v1_Column_Values_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_greptime_v1_Column_Values_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_greptime_v1_ColumnDef_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_greptime_v1_ColumnDef_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\014column.proto\022\013greptime.v1\"\361\003\n\006Column\022\023" +
      "\n\013column_name\030\001 \001(\t\0227\n\rsemantic_type\030\002 \001" +
      "(\0162 .greptime.v1.Column.SemanticType\022*\n\006" +
      "values\030\003 \001(\0132\032.greptime.v1.Column.Values" +
      "\022\023\n\013value_index\030\004 \001(\005\022\021\n\tnull_mask\030\005 \001(\014" +
      "\032\221\002\n\006Values\022\021\n\ti8_values\030\001 \003(\005\022\022\n\ni16_va" +
      "lues\030\002 \003(\005\022\022\n\ni32_values\030\003 \003(\005\022\022\n\ni64_va" +
      "lues\030\004 \003(\003\022\021\n\tu8_values\030\005 \003(\r\022\022\n\nu16_val" +
      "ues\030\006 \003(\r\022\022\n\nu32_values\030\007 \003(\r\022\022\n\nu64_val" +
      "ues\030\010 \003(\004\022\022\n\nf32_values\030\t \003(\002\022\022\n\nf64_val" +
      "ues\030\n \003(\001\022\023\n\013bool_values\030\013 \003(\010\022\025\n\rbinary" +
      "_values\030\014 \003(\014\022\025\n\rstring_values\030\r \003(\t\"1\n\014" +
      "SemanticType\022\007\n\003TAG\020\000\022\t\n\005FIELD\020\001\022\r\n\tTIME" +
      "STAMP\020\002\"^\n\tColumnDef\022\014\n\004name\030\001 \001(\t\022.\n\tda" +
      "ta_type\030\002 \001(\0162\033.greptime.v1.ColumnDataTy" +
      "pe\022\023\n\013is_nullable\030\003 \001(\010*\301\001\n\016ColumnDataTy" +
      "pe\022\013\n\007BOOLEAN\020\000\022\010\n\004INT8\020\001\022\t\n\005INT16\020\002\022\t\n\005" +
      "INT32\020\003\022\t\n\005INT64\020\004\022\t\n\005UINT8\020\005\022\n\n\006UINT16\020" +
      "\006\022\n\n\006UINT32\020\007\022\n\n\006UINT64\020\010\022\013\n\007FLOAT32\020\t\022\013" +
      "\n\007FLOAT64\020\n\022\n\n\006BINARY\020\013\022\n\n\006STRING\020\014\022\010\n\004D" +
      "ATE\020\r\022\014\n\010DATETIME\020\016B\031\n\016io.greptime.v1B\007C" +
      "olumnsb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_greptime_v1_Column_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_greptime_v1_Column_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_greptime_v1_Column_descriptor,
        new java.lang.String[] { "ColumnName", "SemanticType", "Values", "ValueIndex", "NullMask", });
    internal_static_greptime_v1_Column_Values_descriptor =
      internal_static_greptime_v1_Column_descriptor.getNestedTypes().get(0);
    internal_static_greptime_v1_Column_Values_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_greptime_v1_Column_Values_descriptor,
        new java.lang.String[] { "I8Values", "I16Values", "I32Values", "I64Values", "U8Values", "U16Values", "U32Values", "U64Values", "F32Values", "F64Values", "BoolValues", "BinaryValues", "StringValues", });
    internal_static_greptime_v1_ColumnDef_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_greptime_v1_ColumnDef_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_greptime_v1_ColumnDef_descriptor,
        new java.lang.String[] { "Name", "DataType", "IsNullable", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
